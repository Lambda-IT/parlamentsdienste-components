{"file":"pd-table.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement","S.unselectAll","S.getVisibleRows","S.refresh","S.initPaging","S.closeFilter","S.checkAllSelected","S.checkIsIndeterminate","S.setFilter","S.openFilter","S.selectAll","S.pageChanged","S.setSort"],"sources":["src/components/pd-table/pd-table.helper.ts","src/components/pd-table/pd-table.store.ts","src/components/pd-table/pd-table.scss?tag=pd-table&encapsulation=shadow","src/components/pd-table/pd-table.tsx"],"sourcesContent":["// calculte min-width for left side (fixed) of table\n\nimport { PdButtonCell, FilterFunction, PdColumn, PdTableIconConfiguration, PdTableRow } from '../../types';\n\nexport const selectableCellWidth: number = 50;\nexport const statusCellWidth: number = 50;\nexport const btnCellStyle: PdButtonCell = { width: 50, minWidth: 20, align: 'right' };\n\nexport const defaultSortFunc = (a, b, dir: 'asc' | 'desc') => {\n    if (dir === 'asc') return a === b ? 0 : a < b ? -1 : 1;\n    else if (dir === 'desc') return a === b ? 0 : a > b ? -1 : 1;\n};\n\n/**\n * filter by string.includes()\n */\nexport const defaultFilterFunc: FilterFunction = (value: any, filter: string) => {\n    return `${value}`.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\n};\n\n// sum of width/min-width of all fixed columns\nexport function calcFixedMinWidth(columns: PdColumn[], selectable: boolean, status: boolean) {\n    const fixedCols = columns.filter(c => c.fixed);\n    let minWidth = fixedCols.map(c => c.width || c.minWidth || 0).reduce((a, b) => a + b, 0);\n    minWidth += selectable ? selectableCellWidth : 0;\n    minWidth += status ? statusCellWidth : 0;\n    return minWidth === 0 ? '0' : `${minWidth}px`;\n}\n\n// calculate flex for left side (fixed) of table\n// has a fixed width when no column is auto\nexport function calcFixedFlex(columns: PdColumn[], selectable: boolean, status: boolean) {\n    const fixedCols = columns.filter(c => c.fixed);\n    const hasAuto = fixedCols.findIndex(c => c.width === 0) !== -1;\n\n    if (hasAuto) {\n        return '1 1 auto';\n    } else {\n        let width = fixedCols.map(c => c.width).reduce((a, b) => a + b, 0);\n        width += selectable ? selectableCellWidth : 0;\n        width += status ? statusCellWidth : 0;\n        return `0 0 ${width}px`;\n    }\n}\n\n// calculate flex for right side (scroll) of table\n// has a fixed width when no column is auto\nexport function calcScrollFlex(columns: PdColumn[]) {\n    const fixedCols = columns.filter(c => !c.fixed);\n    const hasAuto = fixedCols.findIndex(c => c.width === 0) !== -1;\n\n    if (hasAuto) {\n        return '1 1 auto';\n    } else {\n        const width = fixedCols.map(c => c.width).reduce((a, b) => a + b, 0);\n        return `0 1 ${width}px`;\n    }\n}\n\nexport function getCustomFilterFunctions(columns: PdColumn[], columnFilters) {\n    const customFilters = {};\n    Object.keys(columnFilters).forEach(key => (customFilters[key] = columns.find(col => col.columnName === key)?.filterFunc));\n    return customFilters;\n}\n\nexport function calculateHeaderCellStyle(headerCol: { width: number; minWidth: number }) {\n    return {\n        flex: headerCol.width === 0 ? `1 1 ${headerCol.minWidth || 0}px` : `0 0 ${headerCol.width}px`,\n        minWidth: `${headerCol.minWidth || headerCol.width || 0}px`,\n    };\n}\n\nexport function calculateCellStyle(cell: { width: number; minWidth: number; align: PdColumn['textAlign'] }) {\n    return {\n        flex: cell.width === 0 ? `1 1 ${cell.minWidth || 0}px` : `0 0 ${cell.width}px`,\n        minWidth: `${cell.minWidth || cell.width || 0}px`,\n        justifyContent: getTextAlign(cell.align),\n    };\n}\n\nexport function evaluateBtnColumnWidth(iconConfig: PdTableIconConfiguration): number {\n    if (iconConfig) {\n        return Object.keys(iconConfig).length * btnCellStyle.width;\n    } else {\n        return btnCellStyle.width;\n    }\n}\n\nexport function getTextAlign(textAlign: PdColumn['textAlign']) {\n    return textAlign === 'left' ? 'flex-start' : textAlign === 'right' ? 'flex-end' : 'center';\n}\n\nexport function getFilterFunctions(columns: PdColumn[], defaultFilterFunc: FilterFunction) {\n    return columns.reduce(\n        (prev, cur) => ({\n            ...prev,\n            [cur.columnName]: cur.filterFunc ?? defaultFilterFunc,\n        }),\n        {} as Record<string, FilterFunction>,\n    );\n}\n\nexport function getFilteredRows(rows: PdTableRow[], filterValues: Record<string, string>, filterFunctions: Record<string, FilterFunction>) {\n    return [...rows].filter(row => {\n        // loop all current filter columns\n        return Object.keys(filterValues).every(key => {\n            // skip if filter is empty\n            if (!filterValues[key]) return true;\n            // use custom filter or default\n            return filterFunctions[key](row[key], filterValues[key]);\n        });\n    });\n}\n","import { PdColumn, PdTableRow } from '../../types';\nimport { getFilterFunctions, defaultFilterFunc, defaultSortFunc } from './pd-table.helper';\n\nexport interface TableState {\n    allRows: PdTableRow[];\n    visibleRows: PdTableRow[];\n    currentFilter: string;\n    filterOpen: boolean;\n    allSelected: boolean;\n    isIndeterminate: boolean;\n    sortColumn: string;\n    nextSortDir: Record<string, 'asc' | 'desc'>;\n    filterValues: Record<string, string>;\n    currentPage: number;\n    totalPages: number;\n    pageSize: number;\n    defaultPageSize: number;\n}\n\nexport function getVisibleRows(state: TableState, columns: PdColumn[], externalRowHandling: boolean) {\n    if (externalRowHandling) {\n        return [...state.visibleRows];\n    }\n\n    const filterFunctions = getFilterFunctions(columns, defaultFilterFunc);\n\n    const filteredRows = state.allRows.filter(row => {\n        // loop all current filter columns\n        return Object.keys(state.filterValues).every(key => {\n            // skip if filter is empty\n            if (!state.filterValues[key]) return true;\n            // use custom filter or default\n            return filterFunctions[key](row[key], state.filterValues[key]);\n        });\n    });\n\n    const sortCol = columns.find(col => col.columnName === state.sortColumn);\n    if (!sortCol || !sortCol.sortable) return filteredRows;\n\n    const { columnName } = sortCol;\n    const sortFunction = sortCol.sortFunc ?? defaultSortFunc;\n\n    const dir = state.nextSortDir[columnName] || 'desc';\n\n    return [...filteredRows].sort((a, b) => sortFunction(a[columnName], b[columnName], dir));\n}\n\nexport function setSort(state: TableState, headerCol: PdColumn) {\n    const { columnName, sortable } = headerCol;\n    if (!sortable) return;\n\n    const dir = state.nextSortDir[columnName] || 'desc';\n    state.sortColumn = columnName;\n    state.nextSortDir[columnName] = dir === 'asc' ? 'desc' : 'asc';\n}\n\nexport function setFilter(state: TableState, filter: string, columnName: string) {\n    if (!filter) {\n        delete state.filterValues[columnName];\n    } else {\n        state.filterValues = { ...state.filterValues, [columnName]: filter };\n    }\n\n    closeFilter(state);\n}\n\nexport function openFilter(state: TableState, columnName: string) {\n    state.currentFilter = columnName;\n    state.filterOpen = true;\n}\n\nexport function closeFilter(state: TableState) {\n    state.filterOpen = false;\n}\n\nexport function selectAll(state: TableState) {\n    state.allSelected = !state.allSelected || state.isIndeterminate;\n    if (state.allSelected) state.isIndeterminate = false;\n\n    state.allRows.forEach(r => {\n        if (state.visibleRows.find(vr => vr._id === r._id)) r.pdSelected = state.allSelected;\n    });\n}\n\nexport function unselectAll(state: TableState) {\n    state.allSelected = false;\n\n    state.allRows.forEach(r => {\n        r.pdSelected = false;\n    });\n}\n\nexport function checkAllSelected(state: TableState) {\n    state.allSelected = state.visibleRows.every(r => r.pdSelected); // reset if not all checkboxes are selected\n}\n\nexport function checkIsIndeterminate(state: TableState) {\n    const countSelected = state.visibleRows.reduce((acc, r) => (r.pdSelected ? acc + 1 : acc), 0);\n    state.isIndeterminate = countSelected > 0 && !state.allSelected;\n}\n\nexport function refresh(state: TableState, rows: PdTableRow[], externalRowHandling: boolean, columns: PdColumn[]) {\n    state.allRows = rows.map((r, i) => ({ ...r, _id: i }));\n    if (externalRowHandling) {\n        state.visibleRows = state.allRows;\n    } else {\n        state.visibleRows = getVisibleRows(state, columns, externalRowHandling);\n    }\n    closeFilter(state);\n    if (!externalRowHandling) {\n        state.totalPages = Math.ceil(state.visibleRows.length / state.pageSize);\n        state.currentPage = state.currentPage > state.totalPages ? state.totalPages : state.currentPage;\n        state.sortColumn = undefined;\n        state.currentFilter = undefined;\n        state.filterValues = {};\n        checkAllSelected(state);\n        checkIsIndeterminate(state);\n    }\n}\n\nexport function initPaging(state: TableState, pageSize: number = state.defaultPageSize) {\n    state.currentPage = 1;\n    state.pageSize = pageSize;\n    state.totalPages = Math.ceil(state.visibleRows.length / state.pageSize);\n}\n\nexport function pageChanged(state: TableState, currentPage: number) {\n    state.currentPage = currentPage;\n}\n","@include resetControlFonts;\n\n:host {\n    display: block;\n    flex: 1;\n\n    --pd-menu-label-weight: 700;\n    --pd-menu-label-color: black;\n    --pd-dropdown-vertical-padding: 0.125rem;\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    outline: none;\n}\n\n.pd-table {\n    display: flex;\n\n    .pd-table-horizontal-scroll {\n        overflow: auto;\n\n        .pd-table-row,\n        .pd-table-header-row {\n            overflow: visible;\n        }\n    }\n}\n\n.pd-table-header-row {\n    display: flex;\n    flex-direction: row;\n    height: 3em;\n    color: $white;\n    overflow: hidden;\n\n    .pd-table-header-cell {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 0.625em;\n\n        .pd-table-header-cell-text {\n            display: flex;\n            flex: 1 1 auto;\n            overflow: hidden;\n\n            span {\n                white-space: nowrap;\n                text-overflow: ellipsis;\n                overflow: hidden;\n            }\n        }\n\n        .pd-table-header-cell-actions {\n            display: flex;\n            align-items: center;\n        }\n\n        .pd-table-filter-icon {\n            cursor: pointer;\n        }\n\n        &.pd-table-sortable {\n            user-select: none;\n            cursor: pointer;\n        }\n\n        &.pd-table-dark {\n            background-color: $blue-whale;\n            border-bottom: 0.125em solid $blue-whale;\n            border-top: 0.125em solid $blue-whale;\n            fill: $white;\n            --pd-checkbox-background-color: white;\n\n            &.pd-table-sortable {\n                &:hover {\n                    background-color: $cyan-9;\n                }\n\n                &:active {\n                    background-color: $cyan-6;\n                }\n            }\n        }\n\n        &.pd-table-light {\n            border-bottom: 0.125em solid $blue-whale;\n            border-top: 0.125em solid $blue-whale;\n            color: $pd-black;\n\n            &.pd-table-sortable {\n                &:hover {\n                    background-color: $gray-3;\n                }\n\n                &:active {\n                    background-color: $cyan-6;\n                }\n            }\n        }\n\n        &.pd-table-gray {\n            background-color: $gray-3;\n            border-bottom: 0.125em solid $gray-3;\n            border-top: 0.125em solid $gray-3;\n            color: $pd-black;\n\n            &.pd-table-sortable {\n                &:hover {\n                    background-color: $bon-jour;\n                }\n\n                &:active {\n                    background-color: $cyan-6;\n                }\n            }\n        }\n    }\n}\n\n.pd-table-body {\n    .pd-table-row {\n        display: flex;\n        flex-direction: row;\n        height: 3em;\n        overflow: hidden;\n\n        &:last-child {\n            .pd-table-cell {\n                border-bottom: none;\n            }\n        }\n    }\n}\n\n.pd-table-cell {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0 0.625em;\n    border-bottom: 0.125em solid $gray-3;\n    background: transparent;\n\n    .pd-table-action-btn {\n        @include invisibleButton;\n        margin: 0 0.25rem;\n        fill: setcolor(primary, enabled);\n        cursor: pointer;\n\n        &:hover {\n            fill: setcolor(primary, hover);\n        }\n\n        &:hover:active {\n            fill: setcolor(primary, pressed);\n        }\n    }\n\n    span {\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n    }\n}\n\n.pd-table-cell-bold {\n    font-weight: 700;\n}\n\n.pd-table-filter {\n    @include invisibleButton;\n}\n\n.pd-table-filter-clear {\n    display: flex;\n    fill: $white;\n    align-items: center;\n    padding: 0.1rem;\n    margin-left: 0.2rem;\n    background-color: $cyan-9;\n    border-radius: 0.25rem;\n    border: none;\n    cursor: pointer;\n\n    &:focus-visible {\n        background-color: $focus;\n        fill: $blue-whale;\n    }\n\n    .pd-table-filter-clear-button {\n        @include invisibleButton;\n        display: flex;\n        align-items: center;\n        color: $white;\n    }\n}\n\n.pd-table-filter-hidden {\n    display: none;\n}\n\n.pd-table-footer {\n    display: flex;\n    flex-direction: row;\n    margin-top: 1rem;\n\n    pd-pagination {\n        margin-right: 1rem;\n    }\n\n    &.pd-table-paging-location-left {\n        justify-content: flex-start;\n    }\n\n    &.pd-table-paging-location-right {\n        justify-content: flex-end;\n    }\n}\n","import { createPopper, Instance } from '@popperjs/core';\nimport {\n    Component,\n    ComponentDidLoad,\n    ComponentDidUpdate,\n    ComponentInterface,\n    ComponentWillLoad,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Listen,\n    Method,\n    Prop,\n    Watch,\n} from '@stencil/core';\nimport { createStore } from '@stencil/store';\n\nimport {\n    DropdownItem,\n    PdColumn,\n    PdPagingLocation,\n    PdStatus,\n    PdTableIconConfiguration,\n    PdTableRow,\n    PdTableSelectedStatus,\n    PdTableStyle,\n    SelectedEvent,\n} from '../../types';\nimport {\n    btnCellStyle,\n    calcFixedFlex,\n    calcFixedMinWidth,\n    calcScrollFlex,\n    calculateCellStyle,\n    calculateHeaderCellStyle,\n    evaluateBtnColumnWidth,\n    getTextAlign,\n    selectableCellWidth,\n} from './pd-table.helper';\nimport * as S from './pd-table.store';\n\n/**\n * @slot - Action menu items\n * @slot external-pagination - Pagination component for external row handling\n */\n@Component({\n    tag: 'pd-table',\n    styleUrl: 'pd-table.scss',\n    shadow: true,\n})\nexport class Table implements ComponentInterface, ComponentWillLoad, ComponentDidLoad, ComponentDidUpdate {\n    private filterElement: HTMLPdTableFilterElement;\n    private headerRefs: Record<string, HTMLElement> = {};\n    private popper: Instance;\n    private state: S.TableState;\n\n    @Element() element: HTMLElement;\n\n    /**\n     * Height of header cells\n     */\n    @Prop() headerHeight: string = '48';\n\n    /**\n     * Height of rows\n     */\n    @Prop() rowHeight: string = '48';\n\n    /**\n     * The minimum width the table should take\n     */\n    @Prop() minWidth: string = '300';\n\n    /**\n     * The table style\n     */\n    @Prop() headerStyle: PdTableStyle = 'dark';\n\n    /**\n     * A definition for each column of the table\n     */\n    @Prop() columns: PdColumn[] = [];\n\n    /**\n     * The data definition for each row to display\n     */\n    @Prop() rows: PdTableRow[] = [];\n\n    /**\n     * The configuration for the last column, the icon column\n     */\n    @Prop() iconConfig?: PdTableIconConfiguration;\n\n    /**\n     * Show button column and context menu\n     */\n    @Prop() showActionColumn = false;\n\n    /**\n     * Make rows selectable with a checkbox\n     */\n    @Prop() selectable = false;\n\n    /**\n     * Sets selectable rows to disabled\n     */\n    @Prop() disabled = false;\n\n    /**\n     * Sets selectable rows to readonly\n     */\n    @Prop() readonly = false;\n\n    /**\n     * Allow to render a status icon per row\n     */\n    @Prop() showStatus = false;\n\n    /*\n     * Show label text for menu\n     */\n    @Prop() menuLabel: string;\n\n    /**\n     Enables paging \n     */\n    @Prop() paging: boolean = false;\n\n    /**\n     * Available Page sizes for paging\n     */\n    @Prop() pageSizes: DropdownItem[] = [\n        { id: '1', label: '10', value: 10, selected: true },\n        { id: '2', label: '25', value: 25 },\n        { id: '3', label: '100', value: 100 },\n    ];\n\n    /**\n     * Location of paging element\n     */\n    @Prop() pagingLocation: PdPagingLocation = 'right';\n\n    /**\n     * Disables the sort, filter and pagination of the component.\n     * Enables pd-sort, pd-filter-input, pd-filter-change events\n     * Enables a slot for a external pagination-component\n     */\n    @Prop() externalRowHandling: boolean = false;\n\n    /**\n     * If externalRowHandling is true, this property can be used to set the status of the checkbox on the top left of the table\n     */\n    @Prop() selectedStatus: PdTableSelectedStatus = 'none';\n\n    /**\n     * Triggers when one or all rows get selected\n     */\n    @Event({ eventName: 'pd-selected' }) onSelected: EventEmitter<SelectedEvent>;\n\n    /**\n     * Triggers an event when the edit icon was clicked\n     */\n    @Event({ eventName: 'pd-edit' }) onEdit: EventEmitter<any>;\n\n    /**\n     * Triggers an event when the view icon was clicked\n     */\n    @Event({ eventName: 'pd-view' }) onView: EventEmitter<any>;\n\n    /**\n     * Triggers an event when the delete icon was clicked\n     */\n    @Event({ eventName: 'pd-delete' }) onDelete: EventEmitter<any>;\n\n    /**\n     * Triggers an event when row was clicked\n     */\n    @Event({ eventName: 'pd-clicked-row' }) onRowClick: EventEmitter<any>;\n\n    /**\n     * Gets emitted when a column gets sorted\n     */\n    @Event({ eventName: 'pd-sort' }) onSort!: EventEmitter<{}>;\n\n    /**\n     * Gets emitted when the filter changes\n     */\n    @Event({ eventName: 'pd-filter-change' }) onFilterChange!: EventEmitter<{}>;\n\n    /**\n     * Gets emitted when the filter input changes\n     */\n    @Event({ eventName: 'pd-filter-input' }) onFilterInput!: EventEmitter<string>;\n\n    @Method()\n    async unselectAll() {\n        S.unselectAll(this.state);\n        this.state.visibleRows = S.getVisibleRows(this.state, this.columns, this.externalRowHandling);\n    }\n\n    @Method()\n    async refresh() {\n        S.refresh(this.state, this.rows, this.externalRowHandling, this.columns);\n        S.initPaging(this.state, this.state.pageSize);\n    }\n\n    @Watch('rows')\n    handleRowsChanged() {\n        S.refresh(this.state, this.rows, this.externalRowHandling, this.columns);\n        S.initPaging(this.state, this.state.pageSize);\n    }\n\n    @Watch('selectedStatus')\n    handleSelectedStatusChanged() {\n        if (!this.externalRowHandling) return;\n        switch (this.selectedStatus) {\n            case 'all':\n                this.state.isIndeterminate = false;\n                this.state.allSelected = true;\n                break;\n            case 'none':\n                this.state.isIndeterminate = false;\n                this.state.allSelected = false;\n                break;\n            case 'indeterminate':\n                this.state.isIndeterminate = true;\n                break;\n        }\n    }\n\n    @Listen('keydown')\n    handleKeyDown(ev: KeyboardEvent) {\n        if (ev.key === 'Escape') S.closeFilter(this.state);\n    }\n\n    constructor() {\n        const { state } = createStore<S.TableState>({\n            allRows: [],\n            visibleRows: [],\n            currentFilter: undefined,\n            filterOpen: false,\n            allSelected: false,\n            isIndeterminate: false,\n            sortColumn: undefined,\n            nextSortDir: {},\n            filterValues: {},\n            currentPage: 1,\n            totalPages: 1,\n            pageSize: 10,\n            defaultPageSize: 10,\n        });\n        this.state = state;\n        this.state.allRows = this.rows.map((r, i) => ({ ...r, _id: i }));\n        if (this.externalRowHandling) {\n            this.state.visibleRows = this.state.allRows;\n        } else {\n            this.state.visibleRows = S.getVisibleRows(this.state, this.columns, this.externalRowHandling);\n        }\n\n        this.handleSelectedStatusChanged();\n    }\n\n    public componentWillLoad() {\n        S.checkAllSelected(this.state);\n        S.checkIsIndeterminate(this.state);\n        S.initPaging(this.state, +this.pageSizes.find(ps => ps.selected)?.value || this.state.defaultPageSize);\n    }\n\n    public componentDidLoad() {\n        const table = this.element.shadowRoot.querySelector('.pd-table-header-row') as HTMLElement;\n        this.filterElement = this.element.shadowRoot.querySelector('pd-table-filter') as HTMLPdTableFilterElement;\n        this.popper = this.createMenuPopper(table, this.filterElement);\n    }\n\n    public componentDidUpdate() {\n        if (!this.state.filterOpen) return;\n        this.popper.forceUpdate();\n        this.filterElement.focusInput();\n    }\n\n    /**\n     * new filter set\n     */\n    private filterConfirm(ev: CustomEvent<string>) {\n        S.setFilter(this.state, ev.detail, this.state.currentFilter);\n        this.state.visibleRows = S.getVisibleRows(this.state, this.columns, this.externalRowHandling);\n        S.initPaging(this.state, this.state.pageSize);\n        this.emitFilterChange();\n    }\n\n    private openFilter(ev: MouseEvent, columnName: string) {\n        ev.stopPropagation();\n        this.filterElement.setValue(this.state.filterValues[columnName] || '');\n        this.filterElement.focusInput();\n        this.popper.state.elements.reference = this.headerRefs[columnName];\n        this.popper.update();\n        S.openFilter(this.state, columnName);\n    }\n\n    private clearFilter(ev: MouseEvent, columnName: string) {\n        ev.stopPropagation();\n        S.setFilter(this.state, undefined, columnName);\n        this.state.visibleRows = S.getVisibleRows(this.state, this.columns, this.externalRowHandling);\n        S.initPaging(this.state, this.state.pageSize);\n        S.checkAllSelected(this.state);\n        S.checkIsIndeterminate(this.state);\n        this.emitFilterChange();\n    }\n\n    // create a popper js element for the menu\n    private createMenuPopper(button, menu) {\n        return createPopper(button, menu, {\n            placement: 'bottom-end',\n        });\n    }\n\n    private select(isSelected: boolean, row) {\n        this.state.allRows.find(r => r._id === row._id).pdSelected = isSelected;\n        this.state.visibleRows = S.getVisibleRows(this.state, this.columns, this.externalRowHandling);\n\n        this.onSelected.emit({\n            selected: isSelected,\n            selectAll: false,\n            row,\n            rows: this.state.allRows.filter(r => r.pdSelected),\n        });\n        if (!this.externalRowHandling) {\n            S.checkAllSelected(this.state);\n            S.checkIsIndeterminate(this.state);\n        }\n    }\n\n    private selectAll() {\n        S.selectAll(this.state);\n        this.state.visibleRows = S.getVisibleRows(this.state, this.columns, this.externalRowHandling);\n        this.onSelected.emit({\n            selected: false,\n            selectAll: this.state.allSelected,\n            row: {},\n            rows: this.state.visibleRows.filter(r => r.pdSelected),\n        });\n    }\n\n    private rowClicked(row: PdTableRow, event: MouseEvent) {\n        event.preventDefault();\n        this.onRowClick.emit({ ...row, event });\n    }\n\n    // paging functionality\n    private pageChanged(ev: CustomEvent<number>) {\n        S.pageChanged(this.state, +ev.detail);\n    }\n\n    private pageSizeChanged(ev: CustomEvent<DropdownItem>) {\n        S.initPaging(this.state, +ev.detail.value);\n    }\n\n    private emitSort(headerCol: PdColumn) {\n        if (!headerCol.sortable) return;\n        const { columnName } = headerCol;\n\n        this.onSort.emit({\n            sortColumnName: headerCol.columnName,\n            sortColumnLabel: headerCol.label,\n            sortDirection: this.state.nextSortDir[columnName] === 'asc' ? 'desc' : 'asc',\n        });\n    }\n\n    private emitFilterChange() {\n        this.onFilterChange.emit(this.state.filterValues);\n    }\n\n    private emitFilterInput(ev: CustomEvent<string>) {\n        ev.stopPropagation();\n\n        this.onFilterInput.emit(ev.detail);\n    }\n\n    public render() {\n        const headerStyle = {\n            height: `${this.headerHeight}px`,\n        };\n\n        const fixedStyle = {\n            flex: calcFixedFlex(this.columns, this.selectable, this.showStatus),\n            minWidth: calcFixedMinWidth(this.columns, this.selectable, this.showStatus),\n        };\n\n        const scrollStyle = {\n            flex: calcScrollFlex(this.columns),\n        };\n\n        return (\n            <Host role=\"table\">\n                <pd-table-filter\n                    class={{ 'pd-table-filter-hidden': !this.state.filterOpen }}\n                    onPd-confirm={ev => this.filterConfirm(ev)}\n                    onPd-close={() => (this.state.filterOpen = false)}\n                    onPd-filter-input={ev => this.emitFilterInput(ev)}></pd-table-filter>\n                <div class=\"pd-table\" role=\"grid\" style={{ minWidth: `${this.minWidth}px` }}>\n                    <div class=\"pd-table-fixed\" style={fixedStyle}>\n                        <div class={`pd-table-header-row`} role=\"rowheader\" style={headerStyle}>\n                            {this.renderHeader(true)}\n                        </div>\n                        <div class=\"pd-table-body\">{this.renderRows(true, this.iconConfig)}</div>\n                    </div>\n                    <div class=\"pd-table-horizontal-scroll\" style={scrollStyle}>\n                        <div class={`pd-table-header-row ${this.headerStyle}`} role=\"rowheader\" style={headerStyle}>\n                            {this.renderHeader(false)}\n                        </div>\n                        <div class=\"pd-table-body\">{this.renderRows(false, this.iconConfig)}</div>\n                    </div>\n                </div>\n                {this.renderFooter()}\n            </Host>\n        );\n    }\n    private renderHeader(fixed: boolean = false) {\n        const columns = this.columns\n            .filter(c => !!c.fixed === fixed)\n            .map((headerCol, i) => {\n                const columnSortDir = this.state.nextSortDir[headerCol.columnName];\n                return (\n                    <div\n                        class={{\n                            'pd-table-header-cell': true,\n                            'pd-table-cell-bold': true,\n                            'pd-table-sortable': headerCol.sortable,\n                            [`pd-table-sort-${columnSortDir === 'asc' ? 'desc' : 'asc'}`]: !!columnSortDir,\n                            [`pd-table-${this.headerStyle}`]: true,\n                        }}\n                        ref={el => (this.headerRefs[headerCol.columnName] = el as HTMLElement)}\n                        role=\"cell\"\n                        style={calculateHeaderCellStyle(headerCol)}\n                        title={headerCol.label}\n                        onClick={() => {\n                            S.setSort(this.state, headerCol);\n                            this.state.visibleRows = S.getVisibleRows(\n                                this.state,\n                                this.columns,\n                                this.externalRowHandling,\n                            );\n                            this.emitSort(headerCol);\n                        }}\n                        data-test={`pd-table-header-col-${i}`}>\n                        <div\n                            class=\"pd-table-header-cell-text\"\n                            style={{ justifyContent: getTextAlign(headerCol.textAlign) }}>\n                            <span>{headerCol.label}</span>\n                        </div>\n                        <div class=\"pd-table-header-cell-actions\" data-test={`pd-table-header-actions-col-${i}`}>\n                            {this.renderSort(this.state.nextSortDir[headerCol.columnName], headerCol.columnName)}\n                            {this.renderFilterIcon(headerCol)}\n                        </div>\n                    </div>\n                );\n            });\n\n        // render menu/button column\n        const btnColumnName = 'btnColumn';\n        const btnColumn = (\n            <div\n                class={{\n                    'pd-table-header-cell': true,\n                    'pd-table-cell-bold': true,\n                    [`pd-table-${this.headerStyle}`]: true,\n                }}\n                ref={el => (this.headerRefs[btnColumnName] = el as HTMLElement)}\n                role=\"cell\"\n                style={calculateHeaderCellStyle({\n                    width: evaluateBtnColumnWidth(this.iconConfig),\n                    minWidth: btnCellStyle.minWidth,\n                })}>\n                <div class=\"pd-table-header-cell-text\" style={{ justifyContent: 'flex-end' }}>\n                    <pd-menu label={this.menuLabel} invertColor={this.headerStyle === 'dark' ? true : false}>\n                        <slot data-menu-items=\"\"></slot>\n                    </pd-menu>\n                </div>\n                <div class=\"pd-table-header-cell-actions\"></div>\n            </div>\n        );\n\n        const additionalColumns = [];\n        if (fixed && this.showStatus) additionalColumns.push(this.renderShowStatus());\n        if (fixed && this.selectable) additionalColumns.push(this.renderSelectAll());\n\n        return [...additionalColumns, ...columns, ...(!fixed && this.showActionColumn ? [btnColumn] : [])];\n    }\n\n    private renderRows(fixed: boolean = false, iconConfig: PdTableIconConfiguration) {\n        const rowStyle = {\n            height: `${this.rowHeight}px`,\n        };\n\n        let rows: PdTableRow[] = [];\n        if (!this.paging) {\n            rows = [...this.state.visibleRows];\n        } else {\n            const pageStart = (this.state.currentPage - 1) * this.state.pageSize;\n            rows = [...this.state.visibleRows.slice(pageStart, pageStart + this.state.pageSize)];\n        }\n\n        return rows.map((row, i) => (\n            <div class=\"pd-table-row\" role=\"row\" style={rowStyle} data-test={`pd-table-row-${i}`}>\n                {this.showStatus ? this.renderStatus(row, fixed) : null}\n                {this.selectable ? this.renderSelectable(row, fixed) : null}\n                {this.columns.filter(c => !!c.fixed === fixed).map(col => this.renderColumn(row, col))}\n                {this.showActionColumn ? this.renderBtnColumn(row, fixed, iconConfig) : null}\n            </div>\n        ));\n    }\n\n    private renderColumn(row, col: PdColumn) {\n        const cellStyle = calculateCellStyle({ width: col.width, minWidth: col.minWidth, align: col.textAlign });\n\n        let value = row[col.columnName];\n        if (value && typeof value.getMonth === 'function') {\n            const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(value);\n            const mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(value);\n            const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(value);\n            value = `${da}.${mo}.${ye}`;\n        }\n\n        return (\n            <div\n                class={`pd-table-cell ${col.bold ? 'pd-table-cell-bold' : ''}`}\n                role=\"cell\"\n                style={cellStyle}\n                title={value}\n                onClick={e => this.rowClicked(row, e)}\n                onAuxClick={e => this.rowClicked(row, e)}\n                data-test={`pd-table-cell`}>\n                {this.renderValue(col, value)}\n            </div>\n        );\n    }\n\n    private renderSelectable(row, fixed: boolean) {\n        if (!fixed) return; // only render in fixed row\n        const cellStyle = calculateCellStyle({\n            minWidth: selectableCellWidth,\n            width: selectableCellWidth,\n            align: 'center',\n        });\n        return (\n            <div class={`pd-table-cell`} style={cellStyle} role=\"cell\">\n                <pd-checkbox\n                    checked={row.pdSelected}\n                    onPd-checked={ev => this.select(ev.detail, row)}\n                    disabled={this.disabled}\n                    readonly={this.readonly}\n                    data-test=\"pd-table-cell-selectable\"></pd-checkbox>\n            </div>\n        );\n    }\n\n    private renderStatus(row: PdTableRow, fixed: boolean) {\n        if (!fixed) return; // only render in fixed row\n        const cellStyle = calculateCellStyle({\n            minWidth: selectableCellWidth,\n            width: selectableCellWidth,\n            align: 'center',\n        });\n        return (\n            <div\n                class={`pd-table-cell`}\n                style={cellStyle}\n                role=\"cell\"\n                onClick={e => this.rowClicked(row, e)}\n                onAuxClick={e => this.rowClicked(row, e)}\n                data-test=\"pd-table-cell-status\">\n                {this.renderIcon(row.pdStatus || 'unset')}\n            </div>\n        );\n    }\n\n    private renderBtnColumn(row: PdTableRow, fixed: boolean, iconConfig: PdTableIconConfiguration) {\n        if (fixed) return;\n        const cellStyle = calculateCellStyle({\n            ...btnCellStyle,\n            width: evaluateBtnColumnWidth(this.iconConfig),\n        });\n        const iConfig = { edit: false, view: false, delete: false, ...iconConfig };\n\n        const isEditable =\n            row.pdIconConfig && typeof row.pdIconConfig.edit === 'boolean' ? row.pdIconConfig.edit : iConfig.edit;\n        const isViewable =\n            row.pdIconConfig && typeof row.pdIconConfig.view === 'boolean' ? row.pdIconConfig.view : iConfig.view;\n        const isDeletable =\n            row.pdIconConfig && typeof row.pdIconConfig.delete === 'boolean' ? row.pdIconConfig.delete : iConfig.delete;\n\n        return (\n            <div class={`pd-table-cell`} style={cellStyle} role=\"cell\">\n                {this.renderButton(isEditable, 'edit', this.onEdit, row)}\n                {this.renderButton(isViewable, 'detail', this.onView, row)}\n                {this.renderButton(isDeletable, 'delete', this.onDelete, row)}\n            </div>\n        );\n    }\n\n    private renderValue(col: PdColumn, value) {\n        return <span class=\"pd-table-cell-value\" innerHTML={col.displayFunc ? col.displayFunc(value) : value}></span>;\n    }\n\n    private renderSort(nextSort, columnName) {\n        if (!nextSort || columnName !== this.state.sortColumn) return;\n        return <pd-icon name=\"sort\" size={2} rotate={nextSort === 'asc' ? 180 : 0}></pd-icon>;\n    }\n\n    private renderFilterIcon(headerCol: PdColumn) {\n        if (!headerCol.filter) return;\n\n        if (this.state.filterValues[headerCol.columnName])\n            return (\n                <button class=\"pd-table-filter-clear\" onClick={ev => this.openFilter(ev, headerCol.columnName)}>\n                    <pd-icon name=\"filter\" size={2}></pd-icon>\n                    <button\n                        class=\"pd-table-filter-clear-button\"\n                        onClick={ev => this.clearFilter(ev, headerCol.columnName)}>\n                        <pd-icon size={1.2} name=\"close\"></pd-icon>\n                    </button>\n                </button>\n            );\n        else\n            return (\n                <button class=\"pd-table-filter\" onClick={ev => this.openFilter(ev, headerCol.columnName)}>\n                    <pd-icon class=\"pd-table-filter-icon\" name=\"filter\" size={2}></pd-icon>\n                </button>\n            );\n    }\n\n    private renderButton(visible: boolean, icon: string, trigger: EventEmitter, data) {\n        if (!visible) return;\n        return (\n            <button class=\"pd-table-action-btn\" data-test={`pd-table-action-${icon}`}>\n                <pd-icon\n                    size={2.375}\n                    name={icon}\n                    onClick={ev => {\n                        ev.stopPropagation();\n                        trigger.emit(data);\n                    }}></pd-icon>\n            </button>\n        );\n    }\n\n    private renderSelectAll() {\n        const selectAllName = 'selectAllColumn';\n        return (\n            <div\n                class={{\n                    'pd-table-header-cell': true,\n                    'pd-table-cell-bold': true,\n                    [`pd-table-${this.headerStyle}`]: true,\n                }}\n                ref={el => (this.headerRefs[selectAllName] = el as HTMLElement)}\n                role=\"cell\"\n                style={calculateHeaderCellStyle({\n                    width: selectableCellWidth,\n                    minWidth: selectableCellWidth,\n                })}>\n                <div class=\"pd-table-header-cell-text\" style={{ justifyContent: getTextAlign(btnCellStyle.align) }}>\n                    <pd-checkbox\n                        onPd-checked={() => {\n                            this.selectAll();\n                        }}\n                        checked={this.state.allSelected || this.selectedStatus === 'all'}\n                        isIndeterminate={this.state.isIndeterminate}\n                        disabled={this.disabled}\n                        readonly={this.readonly}\n                        data-test=\"pd-table-header-selectall\"></pd-checkbox>\n                </div>\n                <div class=\"pd-table-header-cell-actions\"></div>\n            </div>\n        );\n    }\n\n    private renderShowStatus() {\n        const columnName = 'showStatusColumn';\n        return (\n            <div\n                class={{\n                    'pd-table-header-cell': true,\n                    'pd-table-cell-bold': true,\n                    [`pd-table-${this.headerStyle}`]: true,\n                }}\n                ref={el => (this.headerRefs[columnName] = el as HTMLElement)}\n                role=\"cell\"\n                style={calculateHeaderCellStyle({\n                    width: selectableCellWidth,\n                    minWidth: selectableCellWidth,\n                })}>\n                <div\n                    class=\"pd-table-header-cell-text\"\n                    style={{ justifyContent: getTextAlign(btnCellStyle.align) }}></div>\n                <div class=\"pd-table-header-cell-actions\"></div>\n            </div>\n        );\n    }\n\n    private renderIcon(status: PdStatus) {\n        switch (status) {\n            case 'success':\n                return <pd-icon name=\"status_green\" size={3.6}></pd-icon>;\n            case 'warning':\n                return <pd-icon name=\"status_orange\" size={3.6}></pd-icon>;\n            case 'danger':\n                return <pd-icon name=\"status_red\" size={3.6}></pd-icon>;\n            case 'unset':\n                return <pd-icon name=\"status_undefined\" size={3.6}></pd-icon>;\n            default:\n                break;\n        }\n    }\n\n    private renderFooter() {\n        if (!this.paging && !this.externalRowHandling) return;\n        return (\n            <div\n                class={{\n                    'pd-table-footer': true,\n                    [`pd-table-paging-location-${this.pagingLocation}`]: true,\n                }}>\n                {this.paging && !this.externalRowHandling ? (\n                    [\n                        <pd-pagination\n                            current-page={this.state.currentPage}\n                            total-pages={this.state.totalPages}\n                            onPd-change={ev => this.pageChanged(ev)}\n                            data-test=\"pd-table-pagination\"></pd-pagination>,\n                        <pd-dropdown\n                            items={this.pageSizes}\n                            onPd-change={ev => this.pageSizeChanged(ev)}\n                            data-test=\"pd-table-pagination-dropdown\"></pd-dropdown>,\n                    ]\n                ) : (\n                    <slot name=\"external-pagination\" />\n                )}\n            </div>\n        );\n    }\n}\n"],"version":3}