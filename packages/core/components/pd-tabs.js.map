{"file":"pd-tabs.js","mappings":";;AAAA,MAAM,SAAS,GAAG,6/CAA6/C;;MCQlgD,IAAI,iBAAAA,kBAAA,CAAA,MAAA,IAAA,SAAAC,CAAA,CAAA;;;;;;;AACL,IAAA,MAAM,GAAG,CAAA,EAAG,OAAO,EAAE,EAAE;AAE/B;;AAEG;IACK,IAAI,GAAe,EAAE;AAE7B;;AAEG;IACK,KAAK,GAAY,KAAK;AAE9B;;AAEG;AACgC,IAAA,QAAQ;AAEnC,IAAA,QAAQ,GAAG,CAAC,GAAa,KAAI;AACjC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3B,KAAC;IAEM,MAAM,GAAA;QACT,QACI,CAAA,CAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,KAAI;YACtB,QACI,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,CAAC,KAAK,EAAE,EAAa,WAAA,EAAA,CAAA,gBAAA,EAAmB,CAAC,CAAA,CAAE,EAAA,EACnG,CAAO,CAAA,OAAA,EAAA,EAAA,KAAK,EAAC,eAAe,EAAA,EACxB,CAAA,CAAA,OAAA,EAAA,EACI,OAAO,EAAE,GAAG,EAAE,OAAO,EACrB,KAAK,EAAC,uCAAuC,EAC7C,IAAI,EAAC,OAAO,EACZ,IAAI,EAAE,WAAW,IAAI,CAAC,MAAM,CAAA,CAAE,EAC9B,QAAQ,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eACvB,CAAA,cAAA,EAAiB,CAAC,CAAE,CAAA,EACjC,CAAA,EACF,CAAA,CAAA,MAAA,EAAA,EAAM,KAAK,EAAC,cAAc,EAAA,WAAA,EAAW,cAAc,EAAA,EAC9C,GAAG,CAAC,IAAI,CACN,CACH,CACN;SAEb,CAAC,CACC;;;;;;;AAKnB,IAAI,OAAO,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-tabs/pd-tabs.scss?tag=pd-tabs&encapsulation=shadow","src/components/pd-tabs/pd-tabs.tsx"],"sourcesContent":[":host {\n    display: flex;\n}\n\n*,\n::before,\n::after {\n    font-weight: 500;\n    box-sizing: border-box;\n    appearance: none;\n    outline: none;\n}\n\n.pd-tabs-visually-hidden {\n    position: absolute;\n    left: -10000px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n}\n\n.pd-tabs-control {\n    .pd-tabs-label {\n        .pd-tabs-radio:checked + .pd-tabs-text {\n            background-color: $blue-whale;\n            color: $white;\n        }\n\n        .pd-tabs-radio:focus-visible + .pd-tabs-text {\n            background-color: $focus;\n            color: $blue-whale;\n        }\n\n        .pd-tabs-text {\n            display: block;\n            cursor: pointer;\n            background-color: $bon-jour;\n            color: $pd-black;\n            padding: 0.5rem 1.5rem;\n            line-height: 1.375rem;\n            font-size: 1rem;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n\n            &:hover {\n                background-color: setcolor(primary, hover);\n                color: setcolor(primary, hoverContrast);\n            }\n\n            &:active {\n                background-color: setcolor(primary, enabled);\n                color: setcolor(primary, enabledContrast);\n            }\n        }\n    }\n\n    &.pd-tabs-light {\n        .pd-tabs-label {\n            background-color: transparent;\n            .pd-tabs-radio:checked + .pd-tabs-text {\n                background-color: transparent;\n                color: $pd-black;\n                border-bottom: 0.125rem solid $blue-whale;\n            }\n\n            .pd-tabs-radio:focus-visible + .pd-tabs-text {\n                background-color: $focus;\n                color: $blue-whale;\n            }\n\n            .pd-tabs-text {\n                background-color: transparent;\n                color: setcolor(primary, enabled);\n\n                &:hover {\n                    background-color: transparent;\n                    color: setcolor(primary, hover);\n                }\n\n                &:active {\n                    background-color: transparent;\n                    color: setcolor(primary, pressed);\n                }\n            }\n        }\n    }\n}\n","import { Component, ComponentInterface, Event, EventEmitter, h, Host, Prop } from '@stencil/core';\nimport { TabValue } from '../../types';\n\n@Component({\n    tag: 'pd-tabs',\n    styleUrl: 'pd-tabs.scss',\n    shadow: true,\n})\nexport class Tabs implements ComponentInterface {\n    private tabsId = `${tabsIds++}`;\n\n    /**\n     * List of tab texts\n     */\n    @Prop() tabs: TabValue[] = [];\n\n    /**\n     * Light mode\n     */\n    @Prop() light: boolean = false;\n\n    /**\n     * Emitted when the value has changed.\n     */\n    @Event({ eventName: 'pd-change' }) pdChange!: EventEmitter<TabValue>;\n\n    private onChange = (tab: TabValue) => {\n        this.pdChange.emit(tab);\n    };\n\n    public render() {\n        return (\n            <Host>\n                {this.tabs.map((tab, i) => {\n                    return (\n                        <div class={{ 'pd-tabs-control': true, 'pd-tabs-light': this.light }} data-test={`pd-tabs-control-${i}`}>\n                            <label class=\"pd-tabs-label\">\n                                <input\n                                    checked={tab?.checked}\n                                    class=\"pd-tabs-radio pd-tabs-visually-hidden\"\n                                    type=\"radio\"\n                                    name={`pd-tabs-${this.tabsId}`}\n                                    onChange={() => this.onChange(tab)}\n                                    data-test={`pd-tabs-radio-${i}`}\n                                />\n                                <span class=\"pd-tabs-text\" data-test=\"pd-tabs-text\">\n                                    {tab.text}\n                                </span>\n                            </label>\n                        </div>\n                    );\n                })}\n            </Host>\n        );\n    }\n}\n\nlet tabsIds = 0;\n"],"version":3}