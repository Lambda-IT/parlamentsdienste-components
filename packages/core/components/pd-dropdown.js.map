{"file":"pd-dropdown.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-dropdown/pd-dropdown.scss?tag=pd-dropdown&encapsulation=shadow","src/components/pd-dropdown/pd-dropdown.tsx"],"sourcesContent":["@include resetControlFonts;\n\n:host {\n    display: block;\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    outline: none;\n}\n\n.pd-dropdown-label {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n    font-size: 0.875rem;\n    max-width: 100%;\n\n    .pd-dropdown-label-text {\n        padding-bottom: 0.25rem;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n}\n\n/**\n * @prop --pd-datepicker-vertical-adjust: top margin of label\n * @prop --pd-dropdown-vertical-padding: Possibility to change inner height of the dropdown\n * @prop --pd-dropdown-horizontal-padding: Possibility to change inner width of the dropdown \n */\n.pd-dropdown {\n    position: relative;\n    margin-top: var(--pd-dropdown-vertical-adjust, inherit);\n\n    .pd-dropdown-button {\n        @include button-scheme(primary);\n        border-radius: 0.25rem;\n        padding-top: var(--pd-dropdown-vertical-padding, 0.625rem);\n        padding-bottom: var(--pd-dropdown-vertical-padding, 0.625rem);\n        padding-left: var(--pd-dropdown-horizontal-padding, 0.75rem);\n        padding-right: var(--pd-dropdown-horizontal-padding, 2.5rem);\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        width: 100%;\n        font-weight: 700;\n\n        .pd-dropdown-text {\n            flex: 1 1 auto;\n            text-align: left;\n            text-overflow: ellipsis;\n            overflow-x: hidden;\n            white-space: nowrap;\n            min-height: 1.5rem;\n\n            &.pd-dropdown-text-wrap {\n                white-space: normal;\n            }\n        }\n\n        .pd-dropdown-caret {\n            position: absolute;\n            fill: $white;\n            flex: 0 0 auto;\n            right: 0.5rem;\n        }\n\n        &:hover:enabled {\n            .pd-dropdown-caret {\n                fill: $white;\n            }\n        }\n\n        &:disabled {\n            cursor: default;\n            .pd-dropdown-caret {\n                fill: $gray;\n            }\n        }\n\n        &:active:enabled {\n            .pd-dropdown-caret {\n                fill: setcolor(primary, pressedContrast);\n            }\n        }\n\n        &:focus-visible {\n            .pd-dropdown-caret {\n                fill: $blue-whale;\n            }\n        }\n    }\n\n    &.pd-dropdown-readonly {\n        .pd-dropdown-button {\n            background-color: setcolor(primary, readonly);\n            color: setcolor(primary, readonlyContrast);\n            border-color: setcolor(danger, readonly);\n            cursor: default;\n            font-style: normal;\n\n            .pd-dropdown-caret {\n                display: none;\n            }\n        }\n    }\n\n    &.pd-dropdown-error {\n        .pd-dropdown-button {\n            background: setcolor(danger, enabled);\n            border-color: setcolor(danger, enabled);\n            color: setcolor(danger, enabledContrast);\n            .pd-dropdown-caret {\n                fill: setcolor(danger, enabledContrast);\n            }\n\n            &:hover:enabled {\n                background-color: setcolor(danger, hover);\n                border-color: setcolor(danger, hover);\n                color: setcolor(danger, hoverContrast);\n                .pd-dropdown-caret {\n                    fill: setcolor(danger, hoverContrast);\n                }\n            }\n\n            &:active:enabled {\n                background-color: setcolor(danger, pressed);\n                border-color: setcolor(danger, pressed);\n                color: setcolor(danger, pressedContrast);\n                .pd-dropdown-caret {\n                    fill: setcolor(danger, pressedContrast);\n                }\n            }\n\n            &:focus-visible {\n                background-color: $focus;\n                border-color: $focus;\n                color: $blue-whale;\n                .pd-dropdown-caret {\n                    fill: $blue-whale;\n                }\n            }\n        }\n    }\n}\n\n.pd-dropdown-menu {\n    background-color: $white;\n    border: 0.125em solid $cyan-9;\n    border-radius: 0.25rem;\n    z-index: 100;\n    width: 100%;\n    overflow: auto;\n}\n\n.pd-dropdown-viewonly {\n    display: block;\n    margin: 0;\n    padding: 0.125rem 0 0.75rem 0;\n}\n\n.pd-dropdown-label-viewonly {\n    font-weight: 700;\n}\n","import { createPopper, Instance } from '@popperjs/core';\nimport {\n    Component,\n    ComponentDidLoad,\n    ComponentDidUpdate,\n    ComponentInterface,\n    ComponentWillLoad,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Listen,\n    Method,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { DropdownItem, DropdownItemSelect, TextWrap } from '../../types';\n\n@Component({\n    tag: 'pd-dropdown',\n    styleUrl: 'pd-dropdown.scss',\n    assetsDirs: ['assets-dropdown'],\n    shadow: true,\n})\nexport class Dropdown implements ComponentInterface, ComponentWillLoad, ComponentDidLoad, ComponentDidUpdate {\n    private menuElement: HTMLElement;\n    private buttonElement: HTMLElement;\n    private popper: Instance;\n\n    @Element() element: HTMLElement;\n\n    @State() open: boolean = false;\n    @State() selectedItem: any;\n\n    /**\n     * Placeholder when no item is selected\n     */\n    @Prop() placeholder: string = '';\n\n    /**\n     * Items to display and select in dropdown\n     */\n    @Prop() items: DropdownItem[] = [];\n\n    /**\n     * To select an item by prop. Needs to be an object with an id property, a string or a number.\n     */\n    @Prop() selected: DropdownItemSelect;\n\n    /**\n     * Items visible in dropdown\n     */\n    @Prop() itemCount: number = 5;\n\n    /**\n     * Enable selection of an empty item\n     */\n    @Prop() emptyItem: boolean = false;\n\n    /**\n     * Data used for the empty item\n     */\n    @Prop() emptyItemData: DropdownItem = {\n        id: '0',\n        label: '-',\n        value: null,\n    };\n\n    /**\n     * If `true`, the user cannot interact with the input.\n     */\n    @Prop() disabled = false;\n\n    /**\n     * If `true`, the dropdown is replaced with a simple text\n     */\n    @Prop() viewOnly = false;\n    private _viewOnly = false;\n\n    /**\n     * Dropdown box label\n     */\n    @Prop() label?: string;\n\n    /**\n     * If `true`, the user cannot modify the value.\n     */\n    @Prop() readonly = false;\n\n    /**\n     * If `true`, the user must fill in a value before submitting a form.\n     */\n    @Prop() required = false;\n\n    /**\n     * Shows error state\n     */\n    @Prop() error: boolean = false;\n\n    /**\n     * Default vertical adjustment for inline forms\n     */\n    @Prop() verticalAdjust: boolean = false;\n\n    /**\n     * Selected item text wrap on words\n     */\n    @Prop() textWrap: TextWrap = 'no-wrap';\n\n    @Event({ eventName: 'pd-change' }) pdChange!: EventEmitter<DropdownItem>;\n\n    /**\n     * Set a preselected entry by index\n     */\n    @Method()\n    async setSelectedIndex(index: number) {\n        if (index >= 0 && index < this.items.length) {\n            this.selectedItem = this.items[index];\n            this.sanitizeInternalItems(this.items[index].id);\n        }\n    }\n\n    /**\n     * Reset the selection of the dropdown\n     */\n    @Method()\n    async reset() {\n        this.selectedItem = null;\n    }\n\n    @Watch('viewOnly')\n    public viewOnlyChanged(viewOnly) {\n        if (viewOnly && this.popper) this.popper.destroy();\n    }\n\n    @Watch('selected')\n    public selectedChanged(newItem: unknown) {\n        const asdf = newItem;\n        console.log('🚀 ~ asdf:', asdf);\n        const selectedId = this.getIdfromSelectedProp();\n        if (!selectedId) return;\n        const itemToSelect = this.items.find(i => i.id === selectedId) || null;\n        if (itemToSelect) {\n            this.selectedItem = itemToSelect;\n            this.sanitizeInternalItems(itemToSelect.id);\n        }\n    }\n\n    @Listen('click', { target: 'body' })\n    handleClick(ev: MouseEvent) {\n        if (!ev.composedPath().includes(this.element)) this.open = false;\n    }\n\n    @Listen('keydown')\n    handleKeyDown(ev: KeyboardEvent) {\n        switch (ev.key) {\n            case 'Tab': {\n                this.open = false;\n                break;\n            }\n            case 'Escape':\n            case 'Enter': {\n                ev.preventDefault();\n                this.open = false;\n                break;\n            }\n\n            case 'ArrowDown': {\n                ev.preventDefault();\n                if (!this.open) {\n                    this.open = true;\n                    break;\n                }\n                const currentIndex = this.items.findIndex(item => item === this.selectedItem);\n                const nextIndex = currentIndex >= this.items.length - 1 ? currentIndex : currentIndex + 1;\n                const nextItem = this.items[nextIndex];\n                if (nextItem !== this.selectedItem) this.selectItem(nextItem);\n                break;\n            }\n            case 'ArrowUp': {\n                ev.preventDefault();\n                const currentIndex = this.items.findIndex(item => item === this.selectedItem);\n                const previousIndex = currentIndex <= 0 ? currentIndex : currentIndex - 1;\n                const previousItem = this.items[previousIndex];\n                if (previousItem !== this.selectedItem) this.selectItem(previousItem);\n                break;\n            }\n            default: {\n                const current = performance.now();\n\n                // search when < 500ms between keystrokes\n                if (current - this.inputTime < 500) {\n                    this.currentSearch += ev.key;\n                } else {\n                    this.currentSearch = ev.key;\n                }\n                const currentItem = this.items.find(\n                    item => item.label.substring(0, this.currentSearch.length)?.toLowerCase() === this.currentSearch,\n                );\n                if (currentItem) this.selectedItem = currentItem;\n\n                this.inputTime = current;\n            }\n        }\n    }\n\n    private currentSearch: string = '';\n    private inputTime: number = 0;\n\n    private selectItem(item: DropdownItem, closeDropdown: boolean = false) {\n        this.selectedItem = item;\n\n        this.sanitizeInternalItems(item.id);\n\n        if (closeDropdown) this.open = false;\n        this.pdChange.emit(item);\n    }\n\n    sanitizeInternalItems(selectedId) {\n        this.items.forEach(item => {\n            delete item.selected;\n        });\n        const index = this.items.findIndex(i => i.id === selectedId);\n        this.items[index] = { ...this.items[index], selected: true };\n    }\n\n    getIdfromSelectedProp(): string | null {\n        if (stringNumberCheck(this.selected)) {\n            return this.selected.toString();\n        }\n        if (objectCheck(this.selected)) {\n            return this.selected.id.toString();\n        }\n\n        console.error('pd-combobox: Invalid selected prop type. Expected string, number, or object with id property.');\n        return null;\n\n        function stringNumberCheck(val: unknown): val is string | number {\n            return (typeof val === 'string' && val !== '') || typeof val === 'number';\n        }\n\n        function objectCheck(val: unknown): val is { id: string | number } {\n            return typeof val === 'object' && val !== null && 'id' in val && stringNumberCheck(val.id);\n        }\n    }\n\n    private toggleDropdown = () => {\n        if (!this.disabled && !this.readonly && !this.viewOnly) this.open = !this.open;\n    };\n\n    public componentWillLoad() {\n        if (this.selected) {\n            const selectedId = this.getIdfromSelectedProp();\n            if (!selectedId) return;\n            this.selectedItem = this.items.find(item => item.id === selectedId);\n            this.sanitizeInternalItems(this.selectedItem.id);\n        } else {\n            this.selectedItem = this.items.find(item => item.selected);\n        }\n    }\n\n    public componentDidLoad() {\n        this._viewOnly = this.viewOnly;\n        if (!this._viewOnly) this.popper = this.createMenuPopper(this.buttonElement, this.menuElement);\n    }\n\n    public componentDidUpdate() {\n        if (this._viewOnly !== this.viewOnly) {\n            this._viewOnly = this.viewOnly;\n            if (!this._viewOnly) this.popper = this.createMenuPopper(this.buttonElement, this.menuElement);\n        }\n\n        if (!this.open) return;\n        const dropdownItemNodes = this.element.shadowRoot.querySelectorAll(\n            'pd-dropdown-item',\n        ) as NodeListOf<HTMLPdDropdownItemElement>;\n        this.scrollToSelected(dropdownItemNodes, this.menuElement);\n        this.popper.forceUpdate();\n    }\n\n    private scrollToSelected(dropdownItemNodes: NodeListOf<HTMLPdDropdownItemElement>, menu: HTMLElement) {\n        dropdownItemNodes.forEach(item => {\n            const centerItem = Math.ceil(this.itemCount / 2) - 1;\n            if (item.selected) menu.scrollTop = item.offsetTop - 48 * centerItem;\n        });\n    }\n\n    // create a popper js element for the menu\n    private createMenuPopper(button, menu) {\n        return createPopper(button, menu, {\n            placement: 'bottom-start',\n        });\n    }\n\n    public render() {\n        return (\n            <Host>\n                <label\n                    class={{\n                        'pd-dropdown-label': true,\n                        'pd-dropdown-disabled': this.disabled,\n                    }}\n                    onClick={this.toggleDropdown}\n                    data-test=\"pd-dropdown-label\">\n                    {this.renderLabel()}\n                </label>\n                {!this.viewOnly ? (\n                    <div\n                        class={{\n                            'pd-dropdown': true,\n                            'pd-dropdown-readonly': this.readonly,\n                            'pd-dropdown-error': this.error,\n                        }}\n                        style={this.verticalAdjust ? { '--pd-dropdown-vertical-adjust': '1.5625rem' } : {}}>\n                        <button\n                            ref={el => (this.buttonElement = el)}\n                            class=\"pd-dropdown-button\"\n                            type=\"button\"\n                            aria-haspopup=\"true\"\n                            aria-expanded={`${this.open}`}\n                            onClick={this.toggleDropdown}\n                            disabled={this.disabled || this.readonly}\n                            data-test=\"pd-dropdown-button\">\n                            <span\n                                class={{ 'pd-dropdown-text': true, 'pd-dropdown-text-wrap': this.textWrap === 'wrap' }}\n                                data-test=\"pd-dropdown-text\">\n                                {this.selectedItem?.label || this.placeholder}\n                            </span>\n                            <pd-icon\n                                class=\"pd-dropdown-caret\"\n                                name=\"dropdown\"\n                                rotate={this.open ? 180 : 0}\n                                size={2.4}></pd-icon>\n                        </button>\n                        {this.renderDropDown()}\n                    </div>\n                ) : (\n                    <p class=\"pd-dropdown-viewonly\">{this.selectedItem?.label || ''}</p>\n                )}\n            </Host>\n        );\n    }\n\n    private renderDropDown() {\n        return (\n            <div\n                ref={el => (this.menuElement = el)}\n                class={`pd-dropdown-menu`}\n                style={{\n                    display: this.open ? 'block' : 'none',\n                    maxHeight: `calc(3em * ${this.itemCount} + 0.25em)`,\n                }}\n                tabIndex={-1}>\n                {this.renderEmptyItem()}\n                {this.renderDropDownItems()}\n            </div>\n        );\n    }\n\n    private renderDropDownItems() {\n        return this.items.map((item, i) => (\n            <pd-dropdown-item\n                value={item.label}\n                selected={item.id === this.selectedItem?.id || false}\n                onClick={() => this.selectItem(item, true)}\n                data-test={`pd-dropdown-item-${i}`}></pd-dropdown-item>\n        ));\n    }\n\n    private renderEmptyItem() {\n        if (!this.emptyItem) return;\n        return (\n            <pd-dropdown-item\n                value={this.emptyItemData.label}\n                selected={this.emptyItemData.id === this.selectedItem?.id || false}\n                onClick={() => this.selectItem(this.emptyItemData, true)}\n                data-test={`pd-dropdown-item-empty`}></pd-dropdown-item>\n        );\n    }\n\n    private renderLabel() {\n        if (!this.label) return;\n\n        return (\n            <span\n                class={{\n                    'pd-dropdown-label-text': true,\n                    'pd-dropdown-label-viewonly': this.viewOnly,\n                }}>\n                {this.label}\n            </span>\n        );\n    }\n}\n"],"version":3}