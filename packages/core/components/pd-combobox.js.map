{"file":"pd-combobox.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement","S.closeDropdown","S.isUserNavigating","S.isAllowOpen","S.navigateToNextItem","S.openDropdownOrCloseWhenNotAllowed","S.getFirstSelectedItem","S.setCurrentNavigatedIndexToSelectedItem","S.selectedHasIcon"],"sources":["src/components/pd-combobox/pd-combobox.store.ts","src/components/pd-combobox/pd-combobox.scss?tag=pd-combobox&encapsulation=shadow","src/components/pd-combobox/pd-combobox.tsx"],"sourcesContent":["import { ComboboxItem } from '../../types';\n\nexport interface ComboboxState {\n    items: ComboboxItem[];\n    filteredItems: ComboboxItem[];\n    open: boolean;\n    selectedItem: ComboboxItem;\n    inputValue: string;\n    currentNavigatedIndex: number;\n}\n\nexport function isUserNavigating(state: ComboboxState): boolean {\n    return state.open && state.currentNavigatedIndex > -1;\n}\n\nexport function openDropdownOrCloseWhenNotAllowed(\n    state: ComboboxState,\n    disabled: boolean,\n    viewOnly: boolean,\n    readOnly: boolean,\n) {\n    if (isAllowOpen(state, disabled, viewOnly, readOnly)) {\n        state.open = true;\n        return;\n    }\n    if (state.open) closeDropdown(state);\n}\n\nexport function isAllowOpen(state: ComboboxState, disabled: boolean, viewOnly: boolean, readOnly: boolean): boolean {\n    return state.filteredItems.length > 0 && !disabled && !viewOnly && !readOnly;\n}\n\nexport function closeDropdown(state: ComboboxState) {\n    state.open = false;\n    state.currentNavigatedIndex = -1;\n}\n\nexport function getFirstSelectedItem(state: ComboboxState): ComboboxItem | null {\n    return state.filteredItems.find(item => item.selected) || null;\n}\n\nexport function navigateToNextItem(state: ComboboxState, direction: 'up' | 'down') {\n    //if we have a selected item we just jump there on the first press of an arrow key\n    if (getFirstSelectedItem(state) && state.currentNavigatedIndex === -1) {\n        setCurrentNavigatedIndexToSelectedItem(state);\n        return;\n    }\n\n    switch (direction) {\n        case 'down': {\n            if (state.currentNavigatedIndex < state.filteredItems.length - 1) {\n                state.currentNavigatedIndex++;\n            }\n            break;\n        }\n        case 'up': {\n            if (state.currentNavigatedIndex > 0) {\n                state.currentNavigatedIndex--;\n            }\n            break;\n        }\n    }\n}\n\nexport function setCurrentNavigatedIndexToSelectedItem(state: ComboboxState) {\n    state.currentNavigatedIndex = state.filteredItems.indexOf(getFirstSelectedItem(state));\n}\n\nexport function selectedHasIcon(state: ComboboxState): boolean {\n    return state.selectedItem?.iconName || state.selectedItem?.iconSrc ? true : false;\n}\n","@include resetControlFonts;\n\n:host {\n    display: flex;\n    position: relative;\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    appearance: none;\n    outline: none;\n}\n\n/**\n * @prop --pd-checkbox-vertical-adjust: top margin of label\n */\n.pd-combobox-label {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n    margin-top: var(--pd-combobox-vertical-adjust, inherit);\n    width: 100%;\n    max-width: 100%;\n\n    .pd-combobox-label-text {\n        font-size: 00.875rem;\n        padding-bottom: 0.25rem;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .pd-combobox-input-wrapper {\n        display: flex;\n        position: relative;\n    }\n\n    .pd-combobox-input {\n        flex: 1 1 auto;\n        width: 100%;\n        padding: 0.625em 0.875rem;\n        padding-right: 3rem;\n        padding-left: 3rem;\n        border-radius: 0.25rem;\n        border: 0.125rem solid setcolor(primary, enabled);\n        transition-property: padding-left;\n        transition-duration: 0.1s;\n\n        &:focus-visible {\n            background-color: $yellow-1;\n            color: $blue-whale;\n\n            & .pd-combobox-icon {\n                fill: $blue-whale;\n            }\n        }\n\n        &.pd-combobox-input-with-multiselect-counter {\n            padding-left: 8rem;\n        }\n    }\n\n    .pd-combobox-icon {\n        position: absolute;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: calc(100% - 0.125rem);\n        top: 1px; // misaligned icon\n        border: none;\n        padding: 0;\n        background-color: transparent;\n        cursor: pointer;\n        fill: setcolor(primary, enabledOutlineContrast);\n\n        &.left {\n            left: 0.65rem;\n        }\n\n        &.right {\n            right: 0.25rem;\n        }\n\n        &.pd-combobox-multiselect-counter {\n            left: 3.5rem;\n        }\n    }\n\n    &:hover {\n        .pd-combobox-input {\n            border-color: setcolor(primary, hover);\n        }\n        .pd-combobox-icon {\n            fill: setcolor(primary, hoverOutlineContrast);\n        }\n    }\n\n    &.pd-combobox-disabled {\n        .pd-combobox-input {\n            font-style: italic;\n            border-color: setcolor(primary, disabled);\n            background-color: $white;\n        }\n\n        .pd-combobox-icon {\n            fill: setcolor(primary, disabled);\n            cursor: default;\n        }\n    }\n\n    &.pd-combobox-readonly {\n        pointer-events: none;\n        .pd-combobox-input {\n            border-color: setcolor(primary, readonly);\n            background-color: setcolor(primary, readonly);\n            color: setcolor(primary, readonlyContrast);\n\n            &:focus-visible {\n                background-color: $yellow-1;\n            }\n        }\n\n        .pd-combobox-icon {\n            fill: setcolor(primary, readonlyContrast);\n        }\n    }\n\n    &.pd-combobox-error {\n        .pd-combobox-input {\n            border-color: $input-error-border;\n            background: $red-3;\n            color: setcolor(danger, enabledContrast);\n\n            &:focus-visible {\n                background-color: $yellow-1;\n            }\n        }\n\n        .pd-combobox-icon {\n            fill: setcolor(danger, enabledContrast);\n        }\n    }\n\n    &.pd-combobox-item-selected {\n        .pd-combobox-icon {\n            fill: setcolor(primary, enabledContrast);\n        }\n\n        .pd-combobox-input {\n            font-weight: 700;\n            padding-left: 0.875rem;\n            background-color: setcolor(primary, enabled);\n            color: $white;\n\n            &:focus-visible {\n                background-color: $focus;\n                border-color: $focus;\n                color: $blue-whale;\n\n                & ~ .pd-combobox-icon {\n                    fill: $blue-whale;\n                }\n            }\n\n            &.pd-combobox-input-with-icon {\n                padding-left: 3rem;\n            }\n        }\n\n        &:hover {\n            .pd-combobox-input {\n                color: setcolor(primary, hoverContrast);\n                background-color: setcolor(primary, hover);\n                border-color: setcolor(primary, hover);\n\n                &:active:enabled {\n                    ~ .pd-combobox-icon {\n                        fill: setcolor(primary, pressedContrast);\n                    }\n                }\n\n                &:focus-visible {\n                    ~ .pd-combobox-icon {\n                        fill: setcolor(primary, hoverContrast);\n                    }\n                }\n            }\n        }\n\n        &:active {\n            .pd-combobox-input {\n                color: setcolor(primary, pressedContrast);\n                background-color: setcolor(primary, pressed);\n                border-color: setcolor(primary, pressed);\n            }\n            .pd-combobox-icon {\n                fill: setcolor(primary, pressedContrast);\n            }\n        }\n\n        &.pd-combobox-disabled {\n            pointer-events: none;\n            .pd-combobox-input {\n                color: setcolor(primary, disabledContrast);\n                background-color: setcolor(primary, disabled);\n                border-color: setcolor(primary, disabled);\n                font-weight: 500;\n            }\n            .pd-combobox-icon {\n                fill: setcolor(primary, disabledContrast);\n                cursor: default;\n            }\n        }\n\n        &.pd-combobox-readonly {\n            pointer-events: none;\n            .pd-combobox-input {\n                color: setcolor(primary, readonlyContrast);\n                background-color: setcolor(primary, readonly);\n                border-color: setcolor(primary, readonly);\n                font-weight: 500;\n                &:focus-visible {\n                    background-color: $focus;\n                    border-color: $focus;\n                }\n            }\n            .pd-combobox-icon {\n                fill: setcolor(primary, readonlyContrast);\n            }\n        }\n\n        &.pd-combobox-error {\n            .pd-combobox-input {\n                border-color: setcolor(danger, enabled);\n                background: setcolor(danger, enabled);\n                color: setcolor(danger, enabledContrast);\n                font-weight: 700;\n                &:focus-visible {\n                    background-color: $focus;\n                    border-color: $focus;\n                }\n            }\n\n            .pd-combobox-icon {\n                fill: setcolor(danger, enabledContrast);\n            }\n\n            &:hover {\n                .pd-combobox-input {\n                    color: setcolor(danger, hoverContrast);\n                    background-color: setcolor(danger, hover);\n                    border-color: setcolor(danger, hover);\n\n                    &:focus-visible:active {\n                        ~ .pd-combobox-icon {\n                            fill: setcolor(danger, pressedContrast);\n                        }\n                    }\n                }\n                .pd-combobox-icon {\n                    fill: setcolor(danger, hoverContrast);\n                }\n            }\n\n            &:active {\n                .pd-combobox-input {\n                    color: setcolor(danger, pressedContrast);\n                    background-color: setcolor(danger, pressed);\n                    border-color: setcolor(danger, pressed);\n                }\n                .pd-combobox-icon {\n                    fill: setcolor(danger, pressedContrast);\n                }\n            }\n        }\n    }\n}\n\n.pd-combobox-dropdown {\n    background-color: $white;\n    z-index: 100;\n    width: 100%;\n    border: 0.125rem solid setcolor(primary, enabled);\n    border-radius: 0.25rem;\n    overflow-y: auto;\n    max-height: calc(3em * 5 + 0.25rem);\n}\n\n.pd-combobox-viewonly {\n    display: block;\n    margin: 0;\n    padding: 0.125rem 0 0.75rem 0;\n}\n\n.pd-combobox-label-viewonly {\n    font-weight: 700;\n}\n","import { createPopper, Instance } from '@popperjs/core';\nimport {\n    Component,\n    ComponentDidLoad,\n    ComponentDidUpdate,\n    ComponentInterface,\n    ComponentWillLoad,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Listen,\n    Method,\n    Prop,\n    Watch,\n} from '@stencil/core';\nimport { createStore } from '@stencil/store';\n\nimport { ComboboxItem, InputChangeEventDetail } from '../../types';\n\nimport * as S from './pd-combobox.store';\n\n@Component({\n    tag: 'pd-combobox',\n    styleUrl: 'pd-combobox.scss',\n    assetsDirs: ['assets-combobox'],\n    shadow: true,\n})\nexport class Combobox implements ComponentInterface, ComponentWillLoad, ComponentDidLoad, ComponentDidUpdate {\n    private nativeInput?: HTMLInputElement;\n    private menuElement: HTMLElement;\n    private wrapperElement: HTMLElement;\n    private popper: Instance;\n    private state: S.ComboboxState;\n\n    @Element() element!: HTMLElement;\n\n    /**\n     * Values shown as combobox items\n     */\n    @Prop({ mutable: true }) items: ComboboxItem[] = [];\n\n    /**\n     * To select an item by prop. This prop is used for the two-way binding.\n     */\n    @Prop({ mutable: true }) selected: ComboboxItem | ComboboxItem[] | null = null;\n\n    /**\n     * Enable selection of an empty item\n     */\n    @Prop() emptyItem: boolean = false;\n\n    /**\n     * Data used for the empty item\n     */\n    @Prop() emptyItemData: ComboboxItem = {\n        id: 'emptyitem',\n        label: '-',\n        value: null,\n    };\n\n    /**\n     * If `true`, the user cannot interact with the input.\n     */\n    @Prop() disabled = false;\n\n    /**\n     * If `true`, the combobox is replaced with a simple text\n     */\n    @Prop() viewOnly = false;\n    private _viewOnly = false;\n\n    /**\n     * If `true`, the user cannot modify the value.\n     */\n    @Prop() readonly = false;\n\n    /**\n     * If `true`, the user must fill in a value before submitting a form.\n     */\n    @Prop() required = false;\n\n    /**\n     * If `true`, the combobox get a selected state like a dropdown.\n     */\n    @Prop() selectable = false;\n\n    /**\n     * If `true`, the combobox can select multiple items.\n     */\n    @Prop() multiselect = false;\n\n    /**\n     * If `true`, the button to deselect all selected items will not be shown.\n     */\n    @Prop() disableMultiselectCounter = false;\n\n    /**\n     * Instructional text that shows before the input has a value.\n     */\n    @Prop() placeholder?: string;\n\n    /**\n     * The value of the input.\n     */\n    @Prop() value?: string = '';\n\n    /**\n     * combobox box label\n     */\n    @Prop() label?: string;\n\n    /**\n     * Items visible in dropdown\n     */\n    @Prop() itemCount: number = 5;\n\n    /**\n     * Show matching parts in results as highlighted\n     */\n    @Prop() highlight?: boolean = true;\n\n    /**\n     * Shows error state\n     */\n    @Prop() error: boolean = false;\n\n    /**\n     * Input tag size (check pd-input 'size' for more info)\n     */\n    @Prop() size?: number = 1;\n\n    /**\n     * Default vertical adjustment for inline forms\n     */\n    @Prop() verticalAdjust: boolean = false;\n\n    /**\n     * If true, the combobox will not search/filter in the items (for example when the combobox is used to make backend searches)\n     */\n    @Prop() disableFilter: boolean = false;\n\n    /**\n     * Emitted when a keyboard input occurred.\n     */\n    @Event({ eventName: 'pd-input' }) pdInput!: EventEmitter<InputChangeEventDetail>;\n\n    /**\n     * Emitted when the value has changed.\n     */\n    @Event({ eventName: 'pd-change' }) pdChange!: EventEmitter<ComboboxItem | ComboboxItem[]>;\n\n    /**\n     * Emitted when the input loses focus.\n     */\n    @Event({ eventName: 'pd-blur' }) pdBlur!: EventEmitter<void>;\n\n    /**\n     * Emitted when the input has focus.\n     */\n    @Event({ eventName: 'pd-focus' }) pdFocus!: EventEmitter<void>;\n\n    /**\n     * Set a preselected entry by index\n     */\n    @Method()\n    async setSelectedIndex(index: number) {\n        if (index >= 0 && index < this.state.items.length) {\n            this.state.items[index] = { ...this.state.items[index], selected: true };\n            this.selectItem(this.state.items[index], false);\n        }\n    }\n\n    /**\n     * Reset the selection of the dropdown\n     */\n    @Method()\n    async reset() {\n        this.resetCombobox();\n    }\n\n    /**\n     * Set the open-close state of the dropdown\n     */\n    @Method()\n    async setOpen(open: boolean = true) {\n        //To ignore the outside click who triggers the close-event\n        setTimeout(() => {\n            this.state.open = open;\n        }, 0);\n    }\n\n    /**\n     * Sets focus on the specified `pd-input`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    @Method()\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n\n    @Watch('viewOnly')\n    public viewOnlyChanged(viewOnly) {\n        if (viewOnly && this.popper) this.popper.destroy();\n    }\n\n    @Watch('items')\n    itemsChanged(items: any) {\n        this.state.items = this.validateItems(items);\n        this.state.filteredItems = this.state.items;\n\n        this.filterItems();\n\n        if (this.selectable) {\n            const selectedItem = this.state.items.find(item => item.selected) ?? null;\n            this.selectItem(selectedItem, false);\n        }\n\n        if (this.multiselect) {\n            this.selected = this.state.items.filter(item => item.selected);\n        }\n    }\n\n    @Watch('selected')\n    public selectedChanged(newSelected: ComboboxItem | ComboboxItem[] | null) {\n        if (!newSelected) return;\n\n        if (this.selectable && !Array.isArray(newSelected)) {\n            this.selectItem(newSelected, false);\n        }\n\n        if (this.multiselect && Array.isArray(newSelected)) {\n            this.state.items = this.state.items.map(item => ({\n                ...item,\n                selected: newSelected.some(selectedItem => selectedItem.id === item.id),\n            }));\n            this.state.filteredItems = this.state.items;\n        }\n    }\n\n    @Listen('click', { target: 'document' })\n    handleClickOutside(ev: MouseEvent) {\n        if (!this.state.open) return;\n        if (ev.target !== this.element && this.state) {\n            S.closeDropdown(this.state);\n        }\n    }\n\n    public componentWillLoad() {\n        if (this.multiselect && this.selectable) {\n            console.warn(\n                'pd-combobox: multiselect and selectable are mutually exclusive. Please use only one of them.',\n            );\n        }\n\n        /* **************************************************\n         ***                 Initial State                 ***\n         ****************************************************/\n        const { state } = createStore<S.ComboboxState>({\n            items: this.validateItems(this.items),\n            filteredItems: this.validateItems(this.items),\n            open: false,\n            selectedItem: null,\n            inputValue: this.value,\n            currentNavigatedIndex: -1, // -1 = user is not navigating\n        });\n        this.state = state;\n\n        if (this.selectable) {\n            const selectedItemFromItemsArray = this.state.items.find(item => item.selected) ?? null;\n            const selectedItemFromSelectedProp = this.getItemFromSelectedProp();\n            const selectedItem = selectedItemFromSelectedProp || selectedItemFromItemsArray;\n            if (selectedItem) {\n                this.selectItem(selectedItem, false);\n            }\n        }\n\n        if (this.multiselect) {\n            const selectedItemsFromItemsArray = this.state.items.filter(item => item.selected);\n            const selectedItemsFromSelectedProp = Array.isArray(this.selected) ? this.selected : [];\n            const selectedItems =\n                selectedItemsFromSelectedProp.length > 0 ? selectedItemsFromSelectedProp : selectedItemsFromItemsArray;\n            this.state.items = this.state.items.map(item => ({\n                ...item,\n                selected: selectedItems.some(selectedItem => selectedItem.id === item.id),\n            }));\n            this.state.filteredItems = this.state.items;\n            this.selected = this.state.items.filter(item => item.selected);\n        }\n    }\n\n    public componentDidLoad() {\n        this._viewOnly = this.viewOnly;\n        if (!this._viewOnly) this.popper = this.createMenuPopper(this.wrapperElement, this.menuElement);\n    }\n\n    public componentDidUpdate() {\n        if (this._viewOnly !== this.viewOnly) {\n            this._viewOnly = this.viewOnly;\n            if (!this._viewOnly) {\n                this.popper = this.createMenuPopper(this.wrapperElement, this.menuElement);\n            }\n        }\n\n        if (!this.state.open) return;\n\n        this.popper.forceUpdate();\n\n        if (S.isUserNavigating(this.state)) {\n            this.scrollToItem(this.state.currentNavigatedIndex);\n        }\n    }\n\n    private scrollToItem(index: number) {\n        const dropdownItemNodes = this.element.shadowRoot.querySelectorAll(\n            'pd-dropdown-item',\n        ) as NodeListOf<HTMLPdDropdownItemElement>;\n        const itemHeight = dropdownItemNodes.length ? dropdownItemNodes[0].getBoundingClientRect().height : 0;\n\n        if (itemHeight === 0) return;\n\n        const scrollY = index * itemHeight - (Math.ceil(this.itemCount / 2) - 1) * itemHeight;\n        this.menuElement.scrollTop = scrollY;\n    }\n\n    private getItemFromSelectedProp(): ComboboxItem | null {\n        if (!this.selected) return null;\n        if (Array.isArray(this.selected)) {\n            return this.selected[0] || null;\n        }\n        return this.selected;\n    }\n\n    private validateItems(items: any) {\n        if (!Array.isArray(items)) {\n            console.error('pd-combobox: items prop must be an array');\n            return [];\n        }\n\n        const emptyItem = this.emptyItem && items[0].id !== this.emptyItemData.id ? [this.emptyItemData] : [];\n\n        return [...emptyItem, ...items];\n    }\n\n    @Listen('keydown')\n    handleKeyDown(ev: KeyboardEvent) {\n        if (this.readonly || this.disabled) return;\n\n        switch (ev.key) {\n            case 'ArrowRight': {\n                this.menuElement.scrollTop = 50;\n                break;\n            }\n            case 'Tab': {\n                this.state.open = false;\n                break;\n            }\n            case 'Escape': {\n                ev.preventDefault();\n\n                if (this.state.open) {\n                    this.escape();\n                    S.closeDropdown(this.state);\n                } else {\n                    if (this.selectable && this.state.selectedItem) {\n                        this.selected = null;\n                        this.pdChange.emit(null);\n                    }\n                    this.resetCombobox();\n                    this.setFocus();\n                }\n                break;\n            }\n            case 'Enter': {\n                ev.preventDefault();\n                if (S.isUserNavigating(this.state)) {\n                    this.selectItem(this.state.filteredItems[this.state.currentNavigatedIndex]);\n                } else if (S.isAllowOpen(this.state, this.disabled, this.viewOnly, this.readonly)) {\n                    this.state.open = true;\n                    S.navigateToNextItem(this.state, 'up');\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                ev.preventDefault();\n                S.openDropdownOrCloseWhenNotAllowed(this.state, this.disabled, this.viewOnly, this.readonly);\n                S.navigateToNextItem(this.state, 'down');\n                break;\n            }\n            case 'ArrowUp': {\n                ev.preventDefault();\n                S.openDropdownOrCloseWhenNotAllowed(this.state, this.disabled, this.viewOnly, this.readonly);\n                S.navigateToNextItem(this.state, 'up');\n                break;\n            }\n        }\n    }\n\n    private selectItem(itemToSelect: ComboboxItem, emit = true) {\n        if (this.multiselect) {\n            itemToSelect.selected = !itemToSelect.selected;\n            this.state.items = this.state.items.map(item => (item.id === itemToSelect.id ? itemToSelect : item));\n            this.state.filteredItems = this.state.filteredItems.map(item =>\n                item.id === itemToSelect.id ? itemToSelect : item,\n            );\n            this.selected = this.state.items.filter(item => item.selected); // Because of the vue two-way binding, this prop needs to be in sync with the output (pdChange)\n            if (emit) {\n                this.pdChange.emit(this.state.items.filter(item => item.selected));\n            }\n            this.setFocus();\n            return;\n        }\n\n        this.state.inputValue = itemToSelect.label;\n        this.state.selectedItem = itemToSelect;\n        this.selected = itemToSelect; // Because of the vue two-way binding, this prop needs to be in sync with the output (pdChange)\n\n        if (this.selectable) {\n            this.state.items = this.state.items.map(item => ({ ...item, selected: item.id === itemToSelect.id }));\n            this.state.filteredItems = this.state.items;\n            S.closeDropdown(this.state);\n        }\n\n        if (emit) {\n            this.pdChange.emit(this.state.selectedItem);\n        }\n\n        if (!this.selectable) this.resetCombobox();\n    }\n\n    private selectItemByClick(comboboxItem: ComboboxItem, ev: MouseEvent) {\n        ev.preventDefault();\n        this.selectItem(comboboxItem);\n        if (this.multiselect) {\n            this.state.currentNavigatedIndex = -1;\n            return;\n        }\n        if (this.selectable) {\n            S.closeDropdown(this.state);\n            return;\n        }\n        this.resetCombobox();\n    }\n\n    private resetCombobox = () => {\n        this.state.filteredItems = this.state.items;\n        this.state.inputValue = '';\n        this.state.selectedItem = null;\n        if (this.selectable) {\n            this.selected = null;\n            this.pdChange.emit(null);\n        }\n\n        S.closeDropdown(this.state);\n    };\n\n    private clearValueWithIconClick() {\n        this.resetCombobox();\n        this.setFocus();\n    }\n\n    private deselectAllItems() {\n        this.state.items = this.state.items.map(item => ({ ...item, selected: false }));\n        this.state.filteredItems = this.state.items;\n        this.selected = null;\n        this.pdChange.emit(null);\n    }\n\n    private onInputClick = () => {\n        if (this.state.open === true) {\n            S.closeDropdown(this.state);\n            return;\n        }\n        if (!S.isAllowOpen(this.state, this.disabled, this.viewOnly, this.readonly)) {\n            return;\n        }\n\n        this.state.open = true;\n        if (S.getFirstSelectedItem(this.state)) {\n            S.setCurrentNavigatedIndexToSelectedItem(this.state);\n        }\n    };\n\n    private onInput = (ev: Event) => {\n        const input = ev.target as HTMLInputElement | null;\n        this.state.inputValue = input?.value ?? '';\n\n        this.pdInput.emit(this.state.inputValue);\n\n        this.filterItems();\n\n        if (S.isAllowOpen(this.state, this.disabled, this.viewOnly, this.readonly)) {\n            this.state.currentNavigatedIndex = -1;\n            this.state.open = true;\n        } else {\n            S.closeDropdown(this.state);\n        }\n    };\n\n    private filterItems() {\n        if (this.disableFilter) return;\n\n        if (this.state.inputValue === '') {\n            this.state.filteredItems = this.state.items;\n            return;\n        }\n\n        this.state.filteredItems = this.state.items.filter(item =>\n            this.filterNotMatchingItems(item, this.state.inputValue),\n        );\n    }\n\n    private filterNotMatchingItems(comboboxItem: ComboboxItem, input: string) {\n        if (!input) input = '';\n        return comboboxItem.label?.toLowerCase().includes(input.toLowerCase());\n    }\n\n    private onBlur = () => {\n        if (this.disabled || this.readonly || this.viewOnly) return;\n\n        this.pdBlur.emit();\n\n        this.escape();\n    };\n\n    private escape() {\n        if (this.selectable && this.state.selectedItem && this.state.inputValue !== this.state.selectedItem.label) {\n            this.state.inputValue = this.state.selectedItem.label;\n            this.state.filteredItems = this.state.items;\n        }\n    }\n\n    private onFocus = () => {\n        this.pdFocus.emit();\n    };\n\n    // create a popper js element for the menu\n    private createMenuPopper(refElement, menu): Instance {\n        return createPopper(refElement, menu, {\n            placement: 'bottom-start',\n        });\n    }\n\n    public render() {\n        const showMultiSelectCounter =\n            this.multiselect &&\n            !this.disableMultiselectCounter &&\n            !this.error &&\n            this.state.items.filter(item => item.selected).length > 0;\n        return (\n            <Host role=\"combobox\">\n                <label\n                    class={{\n                        'pd-combobox-label': true,\n                        'pd-combobox-disabled': this.disabled,\n                        'pd-combobox-readonly': this.readonly,\n                        'pd-combobox-error': this.error,\n                        'pd-combobox-item-selected':\n                            this.selectable && this.state.inputValue === this.state.selectedItem?.label,\n                    }}\n                    style={this.verticalAdjust ? { '--pd-combobox-vertical-adjust': '1.5625rem' } : {}}>\n                    {this.renderLabel()}\n\n                    {!this.viewOnly ? (\n                        <div class=\"pd-combobox-input-wrapper\" ref={el => (this.wrapperElement = el)}>\n                            <input\n                                class={{\n                                    'pd-combobox-input': true,\n                                    'pd-combobox-input-with-icon': this.selectable && S.selectedHasIcon(this.state),\n                                    'pd-combobox-input-with-multiselect-counter': showMultiSelectCounter,\n                                }}\n                                data-test=\"pd-combobox-input\"\n                                ref={input => (this.nativeInput = input)}\n                                disabled={this.disabled}\n                                readOnly={this.readonly}\n                                required={this.required}\n                                placeholder={this.placeholder || ''}\n                                value={this.state.inputValue}\n                                onClick={this.onInputClick}\n                                onInput={this.onInput}\n                                onBlur={this.onBlur}\n                                onFocus={this.onFocus}\n                                size={this.size}\n                                aria-haspopup=\"true\"\n                                aria-expanded={`${this.state.open}`}\n                                tabIndex={this.readonly ? -1 : undefined}\n                            />\n                            {this.state.inputValue !== this.state.selectedItem?.label ? (\n                                <button class=\"pd-combobox-icon left\" tabindex=\"-1\" onClick={() => this.setFocus()}>\n                                    <pd-icon class=\"pd-icon pd-combobox-icon-search\" name=\"search\" size={2.4}></pd-icon>\n                                </button>\n                            ) : null}\n\n                            {showMultiSelectCounter ? (\n                                <div class=\"pd-combobox-icon pd-combobox-multiselect-counter\">\n                                    <pd-chip\n                                        disabled={this.disabled}\n                                        type={this.readonly || this.disabled ? 'text' : 'toggle'}\n                                        onClick={() => {\n                                            if (this.disabled || this.readonly) return;\n                                            return this.deselectAllItems();\n                                        }}>\n                                        {this.state.items.filter(item => item.selected).length}\n                                    </pd-chip>\n                                </div>\n                            ) : null}\n\n                            {this.selectable && S.selectedHasIcon(this.state) ? (\n                                <div class=\"pd-combobox-icon left\">\n                                    <pd-icon\n                                        name={this.state.selectedItem.iconName || null}\n                                        src={this.state.selectedItem.iconSrc || null}\n                                        size={2}></pd-icon>\n                                </div>\n                            ) : null}\n\n                            {this.state.inputValue && !this.disabled && !this.readonly ? (\n                                <button\n                                    class=\"pd-combobox-icon right\"\n                                    onClick={() => this.clearValueWithIconClick()}\n                                    tabindex=\"-1\"\n                                    data-test=\"pd-combobox-reset\">\n                                    <pd-icon class=\"pd-icon\" name=\"cancel\" size={2.4}></pd-icon>\n                                </button>\n                            ) : (\n                                <button data-test=\"pd-combobox-toggle\" class=\"pd-combobox-icon right\" tabindex=\"-1\">\n                                    <pd-icon\n                                        onClick={this.onInputClick}\n                                        class=\"pd-icon pd-combobox-icon-toggle\"\n                                        name=\"dropdown\"\n                                        rotate={this.state.open ? 180 : 0}\n                                        size={2.4}></pd-icon>\n                                </button>\n                            )}\n                        </div>\n                    ) : (\n                        <p class=\"pd-combobox-viewonly\">{this.state.selectedItem?.label || ''}</p>\n                    )}\n                </label>\n                {this.renderDropdownItems()}\n            </Host>\n        );\n    }\n\n    private renderDropdownItems() {\n        return (\n            <div\n                ref={input => (this.menuElement = input)}\n                class=\"pd-combobox-dropdown\"\n                style={{\n                    display: this.state.open ? 'block' : 'none',\n                    maxHeight: `calc(3rem * ${this.itemCount} + 0.25rem)`,\n                }}>\n                {this.state.filteredItems.map((comboboxItem, i) => {\n                    return (\n                        <pd-dropdown-item\n                            data-test={`pd-combobox-item-${i}`}\n                            selected={\n                                this.multiselect\n                                    ? comboboxItem.selected\n                                    : comboboxItem.id === this.state.selectedItem?.id\n                            }\n                            multiselect={this.multiselect}\n                            value={comboboxItem.label ?? ''}\n                            iconName={comboboxItem.iconName || null}\n                            iconSrc={comboboxItem.iconSrc || null}\n                            highlight={this.highlight ? this.state.inputValue : ''}\n                            onClick={ev => this.selectItemByClick(comboboxItem, ev)}\n                            class={{\n                                'pd-dropdown-current-navigating-item': i === this.state.currentNavigatedIndex,\n                            }}></pd-dropdown-item>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    private renderLabel() {\n        if (!this.label) return;\n\n        return (\n            <div\n                class={{\n                    'pd-combobox-label-text': true,\n                    'pd-combobox-label-viewonly': this.viewOnly,\n                }}\n                data-test=\"pd-combobox-label\">\n                {this.label}\n            </div>\n        );\n    }\n}\n"],"version":3}