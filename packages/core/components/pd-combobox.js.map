{"file":"pd-combobox.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement","S.closeDropdown","S.isUserNavigating","S.isAllowOpen","S.navigateToNextItem","S.openDropdownOrCloseWhenNotAllowed","S.getFirstSelectedItem","S.setCurrentNavigatedIndexToSelectedItem","S.selectedHasIcon"],"sources":["../../node_modules/.pnpm/@stencil+store@2.1.3_@stencil+core@4.31.0/node_modules/@stencil/store/dist/index.js","src/components/pd-combobox/pd-combobox.store.ts","src/components/pd-combobox/pd-combobox.scss?tag=pd-combobox&encapsulation=shadow","src/components/pd-combobox/pd-combobox.tsx"],"sourcesContent":["import { getRenderingRef, forceUpdate } from '@stencil/core';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2_000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState ?? {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries(unwrap(defaultState) ?? {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nexport { createObservableMap, createStore };\n","import { ComboboxItem } from '../../types';\n\nexport interface ComboboxState {\n    items: ComboboxItem[];\n    filteredItems: ComboboxItem[];\n    open: boolean;\n    selectedItem: ComboboxItem;\n    inputValue: string;\n    currentNavigatedIndex: number;\n}\n\nexport function isUserNavigating(state: ComboboxState): boolean {\n    return state.open && state.currentNavigatedIndex > -1;\n}\n\nexport function openDropdownOrCloseWhenNotAllowed(state: ComboboxState, disabled: boolean, viewOnly: boolean, readOnly: boolean) {\n    if (isAllowOpen(state, disabled, viewOnly, readOnly)) {\n        state.open = true;\n        return;\n    }\n    if (state.open) closeDropdown(state);\n}\n\nexport function isAllowOpen(state: ComboboxState, disabled: boolean, viewOnly: boolean, readOnly: boolean): boolean {\n    return state.filteredItems.length > 0 && !disabled && !viewOnly && !readOnly;\n}\n\nexport function closeDropdown(state: ComboboxState) {\n    state.open = false;\n    state.currentNavigatedIndex = -1;\n}\n\nexport function getFirstSelectedItem(state: ComboboxState): ComboboxItem | null {\n    return state.filteredItems.find(item => item.selected) || null;\n}\n\nexport function navigateToNextItem(state: ComboboxState, direction: 'up' | 'down') {\n    //if we have a selected item we just jump there on the first press of an arrow key\n    if (getFirstSelectedItem(state) && state.currentNavigatedIndex === -1) {\n        setCurrentNavigatedIndexToSelectedItem(state);\n        return;\n    }\n\n    switch (direction) {\n        case 'down': {\n            if (state.currentNavigatedIndex < state.filteredItems.length - 1) {\n                state.currentNavigatedIndex++;\n            }\n            break;\n        }\n        case 'up': {\n            if (state.currentNavigatedIndex > 0) {\n                state.currentNavigatedIndex--;\n            }\n            break;\n        }\n    }\n}\n\nexport function setCurrentNavigatedIndexToSelectedItem(state: ComboboxState) {\n    state.currentNavigatedIndex = state.filteredItems.indexOf(getFirstSelectedItem(state));\n}\n\nexport function selectedHasIcon(state: ComboboxState): boolean {\n    return state.selectedItem?.iconName || state.selectedItem?.iconSrc ? true : false;\n}\n","@include resetControlFonts;\n\n:host {\n    display: flex;\n    position: relative;\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    appearance: none;\n    outline: none;\n}\n\n/**\n * @prop --pd-checkbox-vertical-adjust: top margin of label\n */\n.pd-combobox-label {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n    margin-top: var(--pd-combobox-vertical-adjust, inherit);\n    width: 100%;\n    max-width: 100%;\n\n    .pd-combobox-label-text {\n        font-size: 00.875rem;\n        padding-bottom: 0.25rem;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .pd-combobox-input-wrapper {\n        display: flex;\n        position: relative;\n    }\n\n    .pd-combobox-input {\n        flex: 1 1 auto;\n        width: 100%;\n        padding: 0.625em 0.875rem;\n        padding-right: 3rem;\n        padding-left: 3rem;\n        border-radius: 0.25rem;\n        border: 0.125rem solid setcolor(primary, enabled);\n        transition-property: padding-left;\n        transition-duration: 0.1s;\n\n        &:focus-visible {\n            background-color: $yellow-1;\n            color: $blue-whale;\n\n            & .pd-combobox-icon {\n                fill: $blue-whale;\n            }\n        }\n\n        &.pd-combobox-input-with-multiselect-counter {\n            padding-left: 8rem;\n        }\n    }\n\n    .pd-combobox-icon {\n        position: absolute;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: calc(100% - 0.125rem);\n        top: 1px; // misaligned icon\n        border: none;\n        padding: 0;\n        background-color: transparent;\n        cursor: pointer;\n        fill: setcolor(primary, enabledOutlineContrast);\n\n        &.left {\n            left: 0.65rem;\n        }\n\n        &.right {\n            right: 0.25rem;\n        }\n\n        &.pd-combobox-multiselect-counter {\n            left: 3.5rem;\n        }\n    }\n\n    &:hover {\n        .pd-combobox-input {\n            border-color: setcolor(primary, hover);\n        }\n        .pd-combobox-icon {\n            fill: setcolor(primary, hoverOutlineContrast);\n        }\n    }\n\n    &.pd-combobox-disabled {\n        .pd-combobox-input {\n            font-style: italic;\n            border-color: setcolor(primary, disabled);\n            background-color: $white;\n        }\n\n        .pd-combobox-icon {\n            fill: setcolor(primary, disabled);\n            cursor: default;\n        }\n    }\n\n    &.pd-combobox-readonly {\n        pointer-events: none;\n        .pd-combobox-input {\n            border-color: setcolor(primary, readonly);\n            background-color: setcolor(primary, readonly);\n            color: setcolor(primary, readonlyContrast);\n\n            &:focus-visible {\n                background-color: $yellow-1;\n            }\n        }\n\n        .pd-combobox-icon {\n            fill: setcolor(primary, readonlyContrast);\n        }\n    }\n\n    &.pd-combobox-error {\n        .pd-combobox-input {\n            border-color: $input-error-border;\n            background: $red-3;\n            color: setcolor(danger, enabledContrast);\n\n            &:focus-visible {\n                background-color: $yellow-1;\n            }\n        }\n\n        .pd-combobox-icon {\n            fill: setcolor(danger, enabledContrast);\n        }\n    }\n\n    &.pd-combobox-item-selected {\n        .pd-combobox-icon {\n            fill: setcolor(primary, enabledContrast);\n        }\n\n        .pd-combobox-input {\n            font-weight: 700;\n            padding-left: 0.875rem;\n            background-color: setcolor(primary, enabled);\n            color: $white;\n\n            &:focus-visible {\n                background-color: $focus;\n                border-color: $focus;\n                color: $blue-whale;\n\n                & ~ .pd-combobox-icon {\n                    fill: $blue-whale;\n                }\n            }\n\n            &.pd-combobox-input-with-icon {\n                padding-left: 3rem;\n            }\n        }\n\n        &:hover {\n            .pd-combobox-input {\n                color: setcolor(primary, hoverContrast);\n                background-color: setcolor(primary, hover);\n                border-color: setcolor(primary, hover);\n\n                &:active:enabled {\n                    ~ .pd-combobox-icon {\n                        fill: setcolor(primary, pressedContrast);\n                    }\n                }\n\n                &:focus-visible {\n                    ~ .pd-combobox-icon {\n                        fill: setcolor(primary, hoverContrast);\n                    }\n                }\n            }\n        }\n\n        &:active {\n            .pd-combobox-input {\n                color: setcolor(primary, pressedContrast);\n                background-color: setcolor(primary, pressed);\n                border-color: setcolor(primary, pressed);\n            }\n            .pd-combobox-icon {\n                fill: setcolor(primary, pressedContrast);\n            }\n        }\n\n        &.pd-combobox-disabled {\n            pointer-events: none;\n            .pd-combobox-input {\n                color: setcolor(primary, disabledContrast);\n                background-color: setcolor(primary, disabled);\n                border-color: setcolor(primary, disabled);\n                font-weight: 500;\n            }\n            .pd-combobox-icon {\n                fill: setcolor(primary, disabledContrast);\n                cursor: default;\n            }\n        }\n\n        &.pd-combobox-readonly {\n            pointer-events: none;\n            .pd-combobox-input {\n                color: setcolor(primary, readonlyContrast);\n                background-color: setcolor(primary, readonly);\n                border-color: setcolor(primary, readonly);\n                font-weight: 500;\n                &:focus-visible {\n                    background-color: $focus;\n                    border-color: $focus;\n                }\n            }\n            .pd-combobox-icon {\n                fill: setcolor(primary, readonlyContrast);\n            }\n        }\n\n        &.pd-combobox-error {\n            .pd-combobox-input {\n                border-color: setcolor(danger, enabled);\n                background: setcolor(danger, enabled);\n                color: setcolor(danger, enabledContrast);\n                font-weight: 700;\n                &:focus-visible {\n                    background-color: $focus;\n                    border-color: $focus;\n                }\n            }\n\n            .pd-combobox-icon {\n                fill: setcolor(danger, enabledContrast);\n            }\n\n            &:hover {\n                .pd-combobox-input {\n                    color: setcolor(danger, hoverContrast);\n                    background-color: setcolor(danger, hover);\n                    border-color: setcolor(danger, hover);\n\n                    &:focus-visible:active {\n                        ~ .pd-combobox-icon {\n                            fill: setcolor(danger, pressedContrast);\n                        }\n                    }\n                }\n                .pd-combobox-icon {\n                    fill: setcolor(danger, hoverContrast);\n                }\n            }\n\n            &:active {\n                .pd-combobox-input {\n                    color: setcolor(danger, pressedContrast);\n                    background-color: setcolor(danger, pressed);\n                    border-color: setcolor(danger, pressed);\n                }\n                .pd-combobox-icon {\n                    fill: setcolor(danger, pressedContrast);\n                }\n            }\n        }\n    }\n}\n\n.pd-combobox-dropdown {\n    background-color: $white;\n    z-index: 100;\n    width: 100%;\n    border: 0.125rem solid setcolor(primary, enabled);\n    border-radius: 0.25rem;\n    overflow-y: auto;\n    max-height: calc(3em * 5 + 0.25rem);\n}\n\n.pd-combobox-viewonly {\n    display: block;\n    margin: 0;\n    padding: 0.125rem 0 0.75rem 0;\n}\n\n.pd-combobox-label-viewonly {\n    font-weight: 700;\n}\n","import { createPopper, Instance } from '@popperjs/core';\nimport {\n    Component,\n    ComponentDidLoad,\n    ComponentDidUpdate,\n    ComponentInterface,\n    ComponentWillLoad,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Listen,\n    Method,\n    Prop,\n    Watch,\n} from '@stencil/core';\nimport { createStore } from '@stencil/store';\n\nimport { ComboboxItem, InputChangeEventDetail } from '../../types';\n\nimport * as S from './pd-combobox.store';\n\n@Component({\n    tag: 'pd-combobox',\n    styleUrl: 'pd-combobox.scss',\n    assetsDirs: ['assets-combobox'],\n    shadow: true,\n})\nexport class Combobox implements ComponentInterface, ComponentWillLoad, ComponentDidLoad, ComponentDidUpdate {\n    private nativeInput?: HTMLInputElement;\n    private menuElement: HTMLElement;\n    private wrapperElement: HTMLElement;\n    private popper: Instance;\n    private state: S.ComboboxState;\n\n    @Element() element!: HTMLElement;\n\n    /**\n     * Values shown as combobox items\n     */\n    @Prop({ mutable: true }) items: ComboboxItem[] = [];\n\n    /**\n     * To select an item by prop. This prop is used for the two-way binding.\n     */\n    @Prop({ mutable: true }) selected: ComboboxItem | ComboboxItem[] | null = null;\n\n    /**\n     * Enable selection of an empty item\n     */\n    @Prop() emptyItem: boolean = false;\n\n    /**\n     * Data used for the empty item\n     */\n    @Prop() emptyItemData: ComboboxItem = {\n        id: '0',\n        label: '-',\n        value: null,\n    };\n\n    /**\n     * If `true`, the user cannot interact with the input.\n     */\n    @Prop() disabled = false;\n\n    /**\n     * If `true`, the combobox is replaced with a simple text\n     */\n    @Prop() viewOnly = false;\n    private _viewOnly = false;\n\n    /**\n     * If `true`, the user cannot modify the value.\n     */\n    @Prop() readonly = false;\n\n    /**\n     * If `true`, the user must fill in a value before submitting a form.\n     */\n    @Prop() required = false;\n\n    /**\n     * If `true`, the combobox get a selected state like a dropdown.\n     */\n    @Prop() selectable = false;\n\n    /**\n     * If `true`, the combobox can select multiple items.\n     */\n    @Prop() multiselect = false;\n\n    /**\n     * If `true`, the button to deselect all selected items will not be shown.\n     */\n    @Prop() disableMultiselectCounter = false;\n\n    /**\n     * Instructional text that shows before the input has a value.\n     */\n    @Prop() placeholder?: string;\n\n    /**\n     * The value of the input.\n     */\n    @Prop() value?: string = '';\n\n    /**\n     * combobox box label\n     */\n    @Prop() label?: string;\n\n    /**\n     * Items visible in dropdown\n     */\n    @Prop() itemCount: number = 5;\n\n    /**\n     * Show matching parts in results as highlighted\n     */\n    @Prop() highlight?: boolean = true;\n\n    /**\n     * Shows error state\n     */\n    @Prop() error: boolean = false;\n\n    /**\n     * Input tag size (check pd-input 'size' for more info)\n     */\n    @Prop() size?: number = 1;\n\n    /**\n     * Default vertical adjustment for inline forms\n     */\n    @Prop() verticalAdjust: boolean = false;\n\n    /**\n     * If true, the combobox will not search/filter in the items (for example when the combobox is used to make backend searches)\n     */\n    @Prop() disableFilter: boolean = false;\n\n    /**\n     * Emitted when a keyboard input occurred.\n     */\n    @Event({ eventName: 'pd-input' }) pdInput!: EventEmitter<InputChangeEventDetail>;\n\n    /**\n     * Emitted when the value has changed.\n     */\n    @Event({ eventName: 'pd-change' }) pdChange!: EventEmitter<ComboboxItem | ComboboxItem[]>;\n\n    /**\n     * Emitted when a combobox request occurred.\n     */\n    @Event({ eventName: 'pd-combobox' }) pdCombobox!: EventEmitter<ComboboxItem | ComboboxItem[]>;\n\n    /**\n     * Emitted when the input loses focus.\n     */\n    @Event({ eventName: 'pd-blur' }) pdBlur!: EventEmitter<void>;\n\n    /**\n     * Emitted when the input has focus.\n     */\n    @Event({ eventName: 'pd-focus' }) pdFocus!: EventEmitter<void>;\n\n    /**\n     * Set a preselected entry by index\n     */\n    @Method()\n    async setSelectedIndex(index: number) {\n        if (index >= 0 && index < this.state.items.length) {\n            this.state.items[index] = { ...this.state.items[index], selected: true };\n            this.selectItem(this.state.items[index], null, false);\n        }\n    }\n\n    /**\n     * Reset the selection of the dropdown\n     */\n    @Method()\n    async reset() {\n        this.resetCombobox();\n    }\n\n    /**\n     * Set the open-close state of the dropdown\n     */\n    @Method()\n    async setOpen(open: boolean = true) {\n        //To ignore the outside click who triggers the close-event\n        setTimeout(() => {\n            this.state.open = open;\n        }, 0);\n    }\n\n    /**\n     * Sets focus on the specified `pd-input`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    @Method()\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n\n    @Watch('viewOnly')\n    public viewOnlyChanged(viewOnly) {\n        if (viewOnly && this.popper) this.popper.destroy();\n    }\n\n    @Watch('items')\n    itemsChanged(items: any) {\n        this.state.items = this.validateItems(items);\n\n        this.state.filteredItems = this.state.items;\n\n        this.filterItems();\n\n        if (this.selectable) {\n            const selectedItem = this.state.items.find(item => item.selected) ?? null;\n\n            //if this condition is true the user is typing and we dont want to interupt such a behaviour\n            if (this.state.inputValue !== '' && this.state.inputValue !== this.state.selectedItem?.label) {\n                //we just want so set the state (used for styling)\n                this.state.selectedItem = selectedItem;\n            } else if (selectedItem) {\n                // really select it (set label to selected)\n                this.selectItem(selectedItem, null, false);\n            }\n        }\n    }\n\n    @Watch('selected')\n    public selectedChanged() {\n        this.state.items = this.validateItems(this.state.items);\n        this.state.filteredItems = this.state.items;\n    }\n\n    @Listen('click', { target: 'document' })\n    handleClickOutside(ev: MouseEvent) {\n        if (!this.state.open) return;\n        if (ev.target !== this.element && this.state) {\n            S.closeDropdown(this.state);\n        }\n    }\n\n    public componentWillLoad() {\n        /* **************************************************\n         ***                 Initial State                 ***\n         ****************************************************/\n        const { state, onChange } = createStore<S.ComboboxState>({\n            items: this.validateItems(this.items),\n            filteredItems: this.validateItems(this.items),\n            open: false,\n            selectedItem: null,\n            inputValue: this.value,\n            currentNavigatedIndex: -1, // -1 = user is not navigating\n        });\n        this.state = state;\n\n        onChange('selectedItem', () => {\n            this.selected = this.state.selectedItem;\n            this.pdChange.emit(this.state.selectedItem);\n        });\n\n        onChange('items', () => {\n            if (this.multiselect) {\n                const selectedItems = this.state.items.filter(item => item.selected);\n                this.pdChange.emit(selectedItems);\n            } else {\n                const selectedItem = this.state.items.find(item => item.selected) ?? null;\n                this.pdChange.emit(selectedItem);\n            }\n        });\n\n        if (!this.multiselect && this.selected) {\n            const idsFromSelectedProp = this.getIdsfromSelectedProp(this.selected);\n            if (idsFromSelectedProp && idsFromSelectedProp.length > 0) {\n                const selectedItem = this.state.items.find(item => item.id === idsFromSelectedProp[0]) ?? null;\n                if (selectedItem) {\n                    this.selectItem(selectedItem, null, false);\n                }\n            }\n        }\n    }\n\n    public componentDidLoad() {\n        this._viewOnly = this.viewOnly;\n        if (!this._viewOnly) this.popper = this.createMenuPopper(this.wrapperElement, this.menuElement);\n    }\n\n    public componentDidUpdate() {\n        if (this._viewOnly !== this.viewOnly) {\n            this._viewOnly = this.viewOnly;\n            if (!this._viewOnly) {\n                this.popper = this.createMenuPopper(this.wrapperElement, this.menuElement);\n            }\n        }\n\n        if (!this.state.open) return;\n\n        this.popper.forceUpdate();\n\n        if (S.isUserNavigating(this.state)) {\n            this.scrollToItem(this.state.currentNavigatedIndex);\n        }\n    }\n\n    private scrollToItem(index: number) {\n        const dropdownItemNodes = this.element.shadowRoot.querySelectorAll(\n            'pd-dropdown-item',\n        ) as NodeListOf<HTMLPdDropdownItemElement>;\n        const itemHeight = dropdownItemNodes.length ? dropdownItemNodes[0].getBoundingClientRect().height : 0;\n\n        if (itemHeight === 0) return;\n\n        const scrollY = index * itemHeight - (Math.ceil(this.itemCount / 2) - 1) * itemHeight;\n        this.menuElement.scrollTop = scrollY;\n    }\n\n    private getIdsfromSelectedProp(selected: ComboboxItem | ComboboxItem[]): string[] | null {\n        if (!selected) return null;\n\n        if (Array.isArray(selected)) {\n            return selected.map(item => item.id.toString());\n        }\n\n        return [selected.id.toString()];\n    }\n\n    private validateItems(items: any) {\n        if (!Array.isArray(items)) return;\n\n        const emptyItem = this.emptyItem && items[0] !== this.emptyItemData ? [this.emptyItemData] : [];\n\n        if (!this.multiselect && !this.selectable) {\n            const allItemsUnselected = items.map(item => ({ ...item, selected: false }));\n            return [...emptyItem, ...allItemsUnselected];\n        }\n\n        if (this.selected) {\n            const selectedIds = this.getIdsfromSelectedProp(this.selected);\n            if (!selectedIds) return;\n            const itemsWithSelected = items.map(item => ({\n                ...item,\n                selected: selectedIds.includes(item.id.toString()),\n            }));\n            return [...emptyItem, ...itemsWithSelected];\n        }\n\n        return [...emptyItem, ...items];\n    }\n\n    @Listen('keydown')\n    handleKeyDown(ev: KeyboardEvent) {\n        if (this.readonly || this.disabled) return;\n\n        switch (ev.key) {\n            case 'ArrowRight': {\n                this.menuElement.scrollTop = 50;\n                break;\n            }\n            case 'Tab': {\n                this.state.open = false;\n                break;\n            }\n            case 'Escape': {\n                ev.preventDefault();\n\n                if (this.state.open) {\n                    this.escape();\n                    S.closeDropdown(this.state);\n                } else {\n                    if (this.selectable && this.state.selectedItem) {\n                        this.pdCombobox.emit(null);\n                    }\n                    this.resetCombobox();\n                    this.setFocus();\n                }\n                break;\n            }\n            case 'Enter': {\n                ev.preventDefault();\n                if (S.isUserNavigating(this.state)) {\n                    this.selectItem(this.state.filteredItems[this.state.currentNavigatedIndex]);\n                } else if (S.isAllowOpen(this.state, this.disabled, this.viewOnly, this.readonly)) {\n                    this.state.open = true;\n                    S.navigateToNextItem(this.state, 'up');\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                ev.preventDefault();\n                S.openDropdownOrCloseWhenNotAllowed(this.state, this.disabled, this.viewOnly, this.readonly);\n                S.navigateToNextItem(this.state, 'down');\n                break;\n            }\n            case 'ArrowUp': {\n                ev.preventDefault();\n                S.openDropdownOrCloseWhenNotAllowed(this.state, this.disabled, this.viewOnly, this.readonly);\n                S.navigateToNextItem(this.state, 'up');\n                break;\n            }\n        }\n    }\n\n    private selectItem(comboboxItem: ComboboxItem, ev?: Event, emitPdCombobox = true) {\n        if (ev) ev.preventDefault();\n\n        if (this.multiselect) {\n            comboboxItem.selected = !comboboxItem.selected;\n            this.state.items = this.state.items.map(item => (item.id === comboboxItem.id ? comboboxItem : item));\n            this.state.filteredItems = this.state.filteredItems.map(item =>\n                item.id === comboboxItem.id ? comboboxItem : item,\n            );\n            this.selected = this.state.items.filter(item => item.selected);\n\n            if (emitPdCombobox) {\n                this.pdCombobox.emit(this.state.items.filter(item => item.selected));\n            }\n            this.setFocus();\n            return;\n        }\n\n        this.state.inputValue = comboboxItem.label;\n        this.state.selectedItem = comboboxItem;\n\n        if (this.selectable) {\n            this.state.items = this.state.items.map(item => ({ ...item, selected: item.id === comboboxItem.id }));\n            this.state.filteredItems = this.state.items;\n            this.selected = comboboxItem;\n            S.closeDropdown(this.state);\n        }\n\n        if (emitPdCombobox) this.pdCombobox.emit(this.state.selectedItem);\n\n        if (!this.selectable) this.resetCombobox();\n    }\n\n    private selectItemByClick(comboboxItem: ComboboxItem, ev: MouseEvent) {\n        ev.preventDefault();\n        this.selectItem(comboboxItem);\n\n        if (this.multiselect) {\n            this.state.currentNavigatedIndex = -1;\n            return;\n        }\n\n        if (this.selectable) {\n            S.closeDropdown(this.state);\n            return;\n        }\n\n        this.resetCombobox();\n    }\n\n    private resetCombobox = (ev?: Event) => {\n        if (ev) ev.preventDefault();\n        this.state.filteredItems = this.state.items;\n        this.state.inputValue = '';\n        this.state.selectedItem = null;\n        S.closeDropdown(this.state);\n    };\n\n    private clearValueWithIconClick() {\n        if (this.selectable && this.state.selectedItem) {\n            this.pdCombobox.emit(null);\n        }\n        this.resetCombobox();\n        this.setFocus();\n    }\n\n    private deselectAllItems() {\n        this.selected = [];\n        this.state.items = this.state.items.map(item => ({ ...item, selected: false }));\n        this.state.filteredItems = this.state.items;\n        this.pdCombobox.emit(null);\n    }\n\n    private onInputClick = () => {\n        if (this.state.open === true) {\n            S.closeDropdown(this.state);\n            return;\n        }\n        if (!S.isAllowOpen(this.state, this.disabled, this.viewOnly, this.readonly)) {\n            return;\n        }\n\n        this.state.open = true;\n        if (S.getFirstSelectedItem(this.state)) {\n            S.setCurrentNavigatedIndexToSelectedItem(this.state);\n        }\n    };\n\n    private onInput = (ev: Event) => {\n        const input = ev.target as HTMLInputElement | null;\n        this.state.inputValue = input?.value ?? '';\n        // this.pdInput.emit({ value: this.state.inputValue });\n        this.pdInput.emit(this.state.inputValue);\n\n        this.filterItems();\n\n        if (S.isAllowOpen(this.state, this.disabled, this.viewOnly, this.readonly)) {\n            this.state.currentNavigatedIndex = -1;\n            this.state.open = true;\n        } else {\n            S.closeDropdown(this.state);\n        }\n    };\n\n    private filterItems() {\n        if (this.disableFilter) return;\n\n        if (this.state.inputValue === '') {\n            this.state.filteredItems = this.state.items;\n            return;\n        }\n\n        this.state.filteredItems = this.state.items.filter(item =>\n            this.filterNotMatchingItems(item, this.state.inputValue),\n        );\n    }\n\n    private filterNotMatchingItems(comboboxItem: ComboboxItem, input: string) {\n        if (!input) input = '';\n        return comboboxItem.label?.toLowerCase().includes(input.toLowerCase());\n    }\n\n    private onBlur = () => {\n        if (this.disabled || this.readonly || this.viewOnly) return;\n\n        this.pdBlur.emit();\n\n        this.escape();\n    };\n\n    private escape() {\n        if (this.selectable && this.state.selectedItem && this.state.inputValue !== this.state.selectedItem.label) {\n            this.state.inputValue = this.state.selectedItem.label;\n            this.state.filteredItems = this.state.items;\n        }\n    }\n\n    private onFocus = () => {\n        this.pdFocus.emit();\n    };\n\n    // create a popper js element for the menu\n    private createMenuPopper(refElement, menu): Instance {\n        return createPopper(refElement, menu, {\n            placement: 'bottom-start',\n        });\n    }\n\n    public render() {\n        const showMultiSelectCounter =\n            this.multiselect &&\n            !this.disableMultiselectCounter &&\n            !this.error &&\n            this.state.items.filter(item => item.selected).length > 0;\n        return (\n            <Host role=\"combobox\">\n                <label\n                    class={{\n                        'pd-combobox-label': true,\n                        'pd-combobox-disabled': this.disabled,\n                        'pd-combobox-readonly': this.readonly,\n                        'pd-combobox-error': this.error,\n                        'pd-combobox-item-selected':\n                            this.selectable && this.state.inputValue === this.state.selectedItem?.label,\n                    }}\n                    style={this.verticalAdjust ? { '--pd-combobox-vertical-adjust': '1.5625rem' } : {}}>\n                    {this.renderLabel()}\n\n                    {!this.viewOnly ? (\n                        <div class=\"pd-combobox-input-wrapper\" ref={el => (this.wrapperElement = el)}>\n                            <input\n                                class={{\n                                    'pd-combobox-input': true,\n                                    'pd-combobox-input-with-icon': this.selectable && S.selectedHasIcon(this.state),\n                                    'pd-combobox-input-with-multiselect-counter': showMultiSelectCounter,\n                                }}\n                                data-test=\"pd-combobox-input\"\n                                ref={input => (this.nativeInput = input)}\n                                disabled={this.disabled}\n                                readOnly={this.readonly}\n                                required={this.required}\n                                placeholder={this.placeholder || ''}\n                                value={this.state.inputValue}\n                                onClick={this.onInputClick}\n                                onInput={this.onInput}\n                                onBlur={this.onBlur}\n                                onFocus={this.onFocus}\n                                size={this.size}\n                                aria-haspopup=\"true\"\n                                aria-expanded={`${this.state.open}`}\n                                tabIndex={this.readonly ? -1 : undefined}\n                            />\n                            {this.state.inputValue !== this.state.selectedItem?.label ? (\n                                <button class=\"pd-combobox-icon left\" tabindex=\"-1\" onClick={() => this.setFocus()}>\n                                    <pd-icon class=\"pd-icon pd-combobox-icon-search\" name=\"search\" size={2.4}></pd-icon>\n                                </button>\n                            ) : null}\n\n                            {showMultiSelectCounter ? (\n                                <div class=\"pd-combobox-icon pd-combobox-multiselect-counter\">\n                                    <pd-chip\n                                        disabled={this.disabled}\n                                        type={this.readonly || this.disabled ? 'text' : 'toggle'}\n                                        onClick={() => {\n                                            if (this.disabled || this.readonly) return;\n                                            return this.deselectAllItems();\n                                        }}>\n                                        {this.state.items.filter(item => item.selected).length}\n                                    </pd-chip>\n                                </div>\n                            ) : null}\n\n                            {this.selectable && S.selectedHasIcon(this.state) ? (\n                                <div class=\"pd-combobox-icon left\">\n                                    <pd-icon\n                                        name={this.state.selectedItem.iconName || null}\n                                        src={this.state.selectedItem.iconSrc || null}\n                                        size={2}></pd-icon>\n                                </div>\n                            ) : null}\n\n                            {this.state.inputValue && !this.disabled && !this.readonly ? (\n                                <button\n                                    class=\"pd-combobox-icon right\"\n                                    onClick={() => this.clearValueWithIconClick()}\n                                    tabindex=\"-1\"\n                                    data-test=\"pd-combobox-reset\">\n                                    <pd-icon class=\"pd-icon\" name=\"cancel\" size={2.4}></pd-icon>\n                                </button>\n                            ) : (\n                                <button data-test=\"pd-combobox-toggle\" class=\"pd-combobox-icon right\" tabindex=\"-1\">\n                                    <pd-icon\n                                        onClick={this.onInputClick}\n                                        class=\"pd-icon pd-combobox-icon-toggle\"\n                                        name=\"dropdown\"\n                                        rotate={this.state.open ? 180 : 0}\n                                        size={2.4}></pd-icon>\n                                </button>\n                            )}\n                        </div>\n                    ) : (\n                        <p class=\"pd-combobox-viewonly\">{this.state.selectedItem?.label || ''}</p>\n                    )}\n                </label>\n                {this.renderDropdownItems()}\n            </Host>\n        );\n    }\n\n    private renderDropdownItems() {\n        return (\n            <div\n                ref={input => (this.menuElement = input)}\n                class=\"pd-combobox-dropdown\"\n                style={{\n                    display: this.state.open ? 'block' : 'none',\n                    maxHeight: `calc(3rem * ${this.itemCount} + 0.25rem)`,\n                }}>\n                {this.state.filteredItems.map((comboboxItem, i) => {\n                    // console.log('rendering combobox item', comboboxItem, i);\n                    return (\n                        <pd-dropdown-item\n                            data-test={`pd-combobox-item-${i}`}\n                            selected={\n                                this.multiselect\n                                    ? comboboxItem.selected\n                                    : comboboxItem.id === this.state.selectedItem?.id\n                            }\n                            multiselect={this.multiselect}\n                            value={comboboxItem.label ?? ''}\n                            iconName={comboboxItem.iconName || null}\n                            iconSrc={comboboxItem.iconSrc || null}\n                            highlight={this.highlight ? this.state.inputValue : ''}\n                            onClick={ev => this.selectItemByClick(comboboxItem, ev)}\n                            class={{\n                                'pd-dropdown-current-navigating-item': i === this.state.currentNavigatedIndex,\n                            }}></pd-dropdown-item>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    private renderLabel() {\n        if (!this.label) return;\n\n        return (\n            <div\n                class={{\n                    'pd-combobox-label-text': true,\n                    'pd-combobox-label-viewonly': this.viewOnly,\n                }}\n                data-test=\"pd-combobox-label\">\n                {this.label}\n            </div>\n        );\n    }\n}\n"],"version":3}