{"file":"pd-search.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-search/pd-search.scss?tag=pd-search&encapsulation=shadow","src/components/pd-search/pd-search.tsx"],"sourcesContent":["@include resetControlFonts;\n\n:host {\n    display: flex;\n    position: relative;\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    appearance: none;\n    outline: none;\n}\n\n.pd-search-label {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n\n    .pd-search-label-text {\n        padding-bottom: 0.25rem;\n        font-size: 0.875rem;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .pd-search-input-wrapper {\n        display: flex;\n        position: relative;\n    }\n\n    .pd-search-input {\n        flex: 1 1 auto;\n        min-width: 0;\n        padding: 0.625rem 0.875rem;\n        padding-right: 3em;\n        border-top-left-radius: 0.25rem;\n        border-bottom-left-radius: 0.25rem;\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n        border: 0.125rem solid setcolor(primary, enabled);\n        border-right: none;\n\n        &:focus-visible {\n            background-color: $yellow-1;\n        }\n    }\n\n    &:hover {\n        .pd-search-input {\n            border-color: setcolor(primary, hover);\n        }\n        .pd-search-button {\n            background-color: setcolor(primary, hover);\n            border-color: setcolor(primary, hover);\n        }\n        .pd-search-clear {\n            fill: setcolor(primary, hover);\n        }\n    }\n\n    &:active {\n        .pd-search-input {\n            border-color: setcolor(primary, pressed);\n        }\n        .pd-search-button {\n            background-color: setcolor(primary, pressed);\n            border-color: setcolor(primary, pressed);\n            fill: setcolor(primary, pressedContrast);\n        }\n        .pd-search-clear {\n            fill: setcolor(primary, pressed);\n        }\n    }\n\n    &.pd-search-disabled {\n        pointer-events: none;\n        .pd-search-input {\n            font-style: italic;\n            border-color: setcolor(primary, disabled);\n            border-right: none;\n            background-color: $white;\n        }\n\n        .pd-search-clear {\n            display: none;\n        }\n\n        .pd-search-button {\n            border-color: setcolor(primary, disabled);\n            background-color: setcolor(primary, disabled);\n            fill: setcolor(primary, disabledContrast);\n        }\n    }\n\n    .pd-search-button {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex: 0 0 3rem;\n        border-top-right-radius: 0.25rem;\n        border-bottom-right-radius: 0.25rem;\n        background-color: setcolor(primary, enabled);\n        border: 0.125rem solid setcolor(primary, enabled);\n        border-left: none;\n        padding: 0;\n        cursor: pointer;\n        fill: setcolor(primary, enabledContrast);\n    }\n\n    .pd-search-clear {\n        position: absolute;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        right: 3.25rem;\n        height: calc(100% - 0.125rem);\n        top: 1px; // misaligned icon\n        border: none;\n        padding: 0;\n        background-color: transparent;\n        cursor: pointer;\n        fill: setcolor(primary, enabled);\n    }\n}\n\n.pd-search-dropdown {\n    //position: absolute;\n    background-color: $white;\n    z-index: 100;\n    //top: 3em;\n    width: 100%;\n    border: 0.125em solid setcolor(primary, enabled);\n    border-radius: 0.25rem;\n    overflow-y: auto;\n    max-height: calc(3rem * 5 + 0.25rem);\n}\n","import { createPopper, Instance } from '@popperjs/core';\nimport {\n    Component,\n    ComponentDidLoad,\n    ComponentDidUpdate,\n    ComponentInterface,\n    ComponentWillLoad,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Listen,\n    Method,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { InputChangeEventDetail } from '../../types';\n\n@Component({\n    tag: 'pd-search',\n    styleUrl: 'pd-search.scss',\n    shadow: true,\n})\nexport class Search implements ComponentInterface, ComponentWillLoad, ComponentDidLoad, ComponentDidUpdate {\n    private inputElement?: HTMLInputElement;\n    private menuElement: HTMLElement;\n    private wrapperElement: HTMLElement;\n    private popper: Instance;\n\n    @Element() element: HTMLElement;\n\n    @State() open: boolean = false;\n    @State() selectedIndex: number = -1;\n\n    /**\n     * Values shown as search results\n     */\n    @Prop({ mutable: true }) results: string[] = [];\n\n    /**\n     * If `true`, the user cannot interact with the input.\n     */\n    @Prop() disabled = false;\n\n    /**\n     * Instructional text that shows before the input has a value.\n     */\n    @Prop() placeholder?: string;\n\n    /**\n     * The value of the input.\n     */\n    @Prop({ mutable: true }) value?: string | number = '';\n\n    // used to hold input value in case we need to reset on escape\n    private inputValue?: string | number = '';\n\n    /**\n     * Search box label\n     */\n    @Prop() label?: string;\n\n    /**\n     * Show matching parts in resuls as highlighted\n     */\n    @Prop() highlight?: boolean = true;\n\n    /**\n     * Input tag size (check pd-input 'size' for more info)\n     */\n    @Prop() size?: number = 1;\n\n    /**\n     * Emitted when a keyboard input occurred.\n     */\n    @Event({ eventName: 'pd-input' }) pdInput!: EventEmitter<InputChangeEventDetail>;\n\n    /**\n     * Emitted when the value has changed.\n     */\n    @Event({ eventName: 'pd-change' }) pdChange!: EventEmitter<InputChangeEventDetail>;\n\n    /**\n     * Emitted when a search request occurred.\n     */\n    @Event({ eventName: 'pd-search' }) pdSearch!: EventEmitter<InputChangeEventDetail>;\n\n    /**\n     * Emitted when the input loses focus.\n     */\n    @Event({ eventName: 'pd-blur' }) pdBlur!: EventEmitter<void>;\n\n    /**\n     * Emitted when the input has focus.\n     */\n    @Event({ eventName: 'pd-focus' }) pdFocus!: EventEmitter<void>;\n\n    /**\n     * Update the native input element when the value changes\n     */\n    @Watch('value')\n    valueChanged() {\n        this.pdChange.emit(this.value == null ? this.value : this.value.toString());\n    }\n\n    @Watch('results')\n    resultsChanged(results: any) {\n        this.results = this.validateResults(results);\n        if (this.results.length > 0) {\n            this.selectedIndex = -1;\n            this.open = true;\n        } else this.open = false;\n    }\n\n    @Watch('selectedIndex')\n    indexChanged(index: number) {\n        const menu = this.element.shadowRoot.querySelector('.pd-search-dropdown') as HTMLElement;\n        const dropdownItemNodes = this.element.shadowRoot.querySelectorAll(\n            'pd-dropdown-item',\n        ) as NodeListOf<HTMLPdDropdownItemElement>;\n\n        dropdownItemNodes.forEach((item, itemIndex) => {\n            const centerItem = Math.ceil(5 / 2) - 1;\n            if (itemIndex === index) menu.scrollTop = item.offsetTop - 48 * centerItem;\n        });\n    }\n\n    public componentWillLoad() {\n        this.results = this.validateResults(this.results);\n    }\n\n    public componentDidLoad() {\n        this.popper = this.createMenuPopper(this.wrapperElement, this.menuElement);\n    }\n\n    public componentDidUpdate() {\n        this.popper.forceUpdate();\n    }\n\n    @Listen('keydown')\n    handleKeyDown(ev: KeyboardEvent) {\n        switch (ev.key) {\n            case 'Tab': {\n                this.open = false;\n                break;\n            }\n            case 'Escape': {\n                ev.preventDefault();\n                this.open = false;\n                this.value = this.inputValue;\n                break;\n            }\n            case 'Enter': {\n                ev.preventDefault();\n                this.open = false;\n                this.pdSearch.emit(this.value);\n                this.inputValue = this.value;\n                break;\n            }\n            case 'ArrowDown': {\n                ev.preventDefault();\n                // try to reopen if there are results\n                if (!this.open && this.results?.length > 0) {\n                    this.open = true;\n                    return;\n                } else if (!this.open) return;\n                const currentIndex = this.selectedIndex;\n                this.selectedIndex = currentIndex >= this.results.length - 1 ? currentIndex : currentIndex + 1;\n                this.setValue(this.results[this.selectedIndex]);\n                break;\n            }\n            case 'ArrowUp': {\n                ev.preventDefault();\n                if (!this.open) return;\n                const currentIndex = this.selectedIndex;\n                this.selectedIndex = currentIndex <= 0 ? currentIndex : currentIndex - 1;\n                this.setValue(this.results[this.selectedIndex]);\n                break;\n            }\n            default: {\n                this.selectedIndex = -1;\n            }\n        }\n    }\n\n    @Listen('click', { target: 'body' })\n    handleClickOutside(ev: MouseEvent) {\n        if (ev.target !== this.element) {\n            this.open = false;\n        }\n    }\n\n    /**\n     * Sets focus on the specified `pd-input`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    @Method()\n    async setFocus() {\n        if (this.inputElement) {\n            this.inputElement.focus();\n        }\n    }\n\n    private onClickInput = () => {\n        if (this.results?.length > 0) {\n            this.open = true;\n        }\n    };\n\n    private onInput = (ev: Event) => {\n        const input = ev.target as HTMLInputElement | null;\n        this.setValue(input?.value || '', true);\n        this.pdInput.emit(this.value);\n    };\n\n    private onBlur = () => {\n        if (!this.disabled) this.pdBlur.emit();\n    };\n\n    private onFocus = () => {\n        this.pdFocus.emit();\n    };\n\n    private getValue(): string {\n        return typeof this.value === 'number' ? this.value.toString() : (this.value || '').toString();\n    }\n\n    private setValue(value: string | number | null, isInput: boolean = false): void {\n        this.value = value;\n        if (isInput) this.inputValue = value;\n    }\n\n    private selectItem(value: string, index: number) {\n        this.setValue(value, true);\n        this.selectedIndex = index;\n        this.pdSearch.emit(this.value);\n        this.open = false;\n    }\n\n    private reset = (ev: Event) => {\n        ev.preventDefault();\n        this.setValue('', true);\n        this.pdSearch.emit(this.value);\n        this.open = false;\n    };\n\n    private search = (ev: Event) => {\n        ev.preventDefault();\n        this.pdSearch.emit(this.value);\n        this.open = false;\n    };\n\n    private validateResults(results: any) {\n        return Array.isArray(results) ? results : [];\n    }\n\n    // create a popper js element for the menu\n    private createMenuPopper(refElement, menu): Instance {\n        return createPopper(refElement, menu, {\n            placement: 'bottom-start',\n        });\n    }\n\n    public render() {\n        const value = this.getValue();\n\n        return (\n            <Host role=\"search\">\n                <label\n                    class={{\n                        'pd-search-label': true,\n                        'pd-search-disabled': this.disabled,\n                    }}\n                    data-test=\"pd-search-label\">\n                    {this.renderLabel()}\n                    <div class=\"pd-search-input-wrapper\" ref={el => (this.wrapperElement = el)}>\n                        <input\n                            class=\"pd-search-input\"\n                            ref={el => (this.inputElement = el)}\n                            disabled={this.disabled}\n                            placeholder={this.placeholder || ''}\n                            value={value}\n                            onClick={this.onClickInput}\n                            onInput={this.onInput}\n                            onBlur={this.onBlur}\n                            onFocus={this.onFocus}\n                            size={this.size}\n                            data-test=\"pd-search-input\"\n                        />\n                        <button class=\"pd-search-clear\" onClick={this.reset} tabindex=\"-1\" data-test=\"pd-search-reset\">\n                            <pd-icon class=\"pd-search-clear-icon\" name=\"cancel\" size={2.4}></pd-icon>\n                        </button>\n                        <button\n                            class=\"pd-search-button\"\n                            onClick={this.search}\n                            tabindex=\"-1\"\n                            data-test=\"pd-search-enter\">\n                            <pd-icon class=\"pd-search-button-icon\" name=\"search\" size={2.4}></pd-icon>\n                        </button>\n                    </div>\n                </label>\n                {this.renderDropdownItems()}\n            </Host>\n        );\n    }\n\n    private renderDropdownItems() {\n        return (\n            <div\n                ref={el => (this.menuElement = el)}\n                class=\"pd-search-dropdown\"\n                style={{\n                    display: this.open ? 'block' : 'none',\n                }}>\n                {this.results.map((searchString, i) => (\n                    <pd-dropdown-item\n                        selected={i === this.selectedIndex || false}\n                        value={searchString}\n                        highlight={this.highlight ? this.inputValue : ''}\n                        onClick={() => this.selectItem(searchString, i)}\n                        data-test={`pd-search-dropdown-item-${i}`}></pd-dropdown-item>\n                ))}\n            </div>\n        );\n    }\n\n    private renderLabel() {\n        if (!this.label) return;\n\n        return <div class=\"pd-search-label-text\">{this.label}</div>;\n    }\n}\n"],"version":3}