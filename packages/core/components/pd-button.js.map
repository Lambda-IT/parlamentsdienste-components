{"file":"pd-button.js","mappings":";;AAAA,MAAM,WAAW,GAAG,46bAA46b;;MCan7b,MAAM,iBAAAA,kBAAA,CAAA,MAAA,MAAA,SAAAC,CAAA,CAAA;;;;;;;AACf;;AAEG;IACK,QAAQ,GAAG,KAAK;AAExB;;AAEG;IACK,IAAI,GAAiB,QAAQ;AAErC;;AAEG;IACK,KAAK,GAAkB,SAAS;AAExC;;AAEG;IACK,IAAI,GAAiB,QAAQ;AAErC;;AAEG;IACK,OAAO,GAAY,KAAK;AAEhC;;AAEG;IACK,SAAS,GAAY,KAAK;AAElC;;AAEG;AACK,IAAA,IAAI;AAEZ;;AAEG;IACK,UAAU,GAAY,KAAK;AAEnC;;AAEG;IACK,MAAM,GAAW,QAAQ;AAEjC;;AAEG;IACmC,YAAY,GAAmB,MAAM;AAE3E;;AAEG;AACgB,IAAA,SAAS;AAE5B;;AAEG;AAEH,IAAA,WAAW,CAAC,CAAQ,EAAA;AAChB,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,CAAC,CAAC,cAAc,EAAE;YAClB,CAAC,CAAC,eAAe,EAAE;YACnB;;AAEJ,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;AAC/C,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE;;AAEhC,QAAA,OAAO,CAAC;;IAGL,MAAM,GAAA;QACT,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI;QAC7C,MAAM,OAAO,GAAG,IAAI,GAAG,GAAG,GAAG,QAAQ;QACrC,MAAM,IAAI,GAAG,QAAQ;QACrB,MAAM,SAAS,GAAG,OAAO,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE;AAC1E,QAAA,QACI,CAAA,CAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAC,KAAK,EAAE,EAAE,qBAAqB,EAAE,IAAI,CAAC,SAAS,EAAE,EAAA,EAClD,CAAC,CAAA,OAAO,wDACA,SAAS,EACb,QAAQ,EAAE,QAAQ,EAClB,KAAK,EAAE;gBACH,WAAW,EAAE,OAAO,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU;AACrD,gBAAA,SAAS,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,OAAO,KAAK,QAAQ;AACxD,gBAAA,CAAC,aAAa,IAAI,CAAC,KAAK,CAAE,CAAA,GAAG,IAAI;AACjC,gBAAA,CAAC,aAAa,IAAI,CAAC,IAAI,CAAE,CAAA,GAAG,IAAI;gBAChC,mBAAmB,EAAE,IAAI,CAAC,OAAO;aACpC,EAAA,EAEA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EACvB,IAAI,CAAC,YAAY,EAAE,EACnB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CACnB,CACP;;AAIP,IAAA,UAAU,CAAC,QAAwB,EAAA;AACvC,QAAA,IAAI,QAAQ,KAAK,IAAI,CAAC,YAAY;YAAE;QACpC,QACI,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,CAAkB,eAAA,EAAA,QAAQ,CAAE,CAAA,EAAA,EACpC,CAAA,CAAA,MAAA,EAAA,EAAM,IAAI,EAAC,MAAM,EAAQ,CAAA,CACvB;;IAIN,YAAY,GAAA;AAChB,QAAA,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ;AAAE,YAAA,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;AACpE,QAAA,OAAO,eAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-button/pd-button.scss?tag=pd-button&encapsulation=shadow","src/components/pd-button/pd-button.tsx"],"sourcesContent":["@include resetControlFonts;\n\n:host {\n    display: inline-block;\n    border: none; // fixes border issue in firefox\n    outline: none;\n    vertical-align: bottom;\n}\n\n:host(.pd-button-fullwidth) {\n    display: flex;\n    .pd-button {\n        width: 100%;\n        justify-content: center;\n    }\n}\n\n*,\n::before,\n::after {\n    font-weight: 700;\n    box-sizing: border-box;\n    appearance: none;\n    outline: none;\n}\n\n.pd-button-outline {\n    * {\n        font-weight: 500;\n    }\n}\n\n/**\n * @prop --pd-button-left-radius: Border radius for the left side of the button\n * @prop --pd-button-right-radius: Border radius for the right side of the button\n * @prop --pd-button-padding-vertical: Vertical padding for 'normal' sized buttons\n * @prop --pd-button-padding-horizontal: Horizontal padding for 'normal' sized buttons\n */\n.pd-button {\n    @include button-scheme(primary);\n    @include button-icon-scheme(primary);\n    display: flex;\n    align-items: center;\n    border-top-left-radius: var(--pd-button-left-radius, 0.25rem);\n    border-bottom-left-radius: var(--pd-button-left-radius, 0.25rem);\n    border-top-right-radius: var(--pd-button-right-radius, 0.25rem);\n    border-bottom-right-radius: var(--pd-button-right-radius, 0.25rem);\n    padding: var(--pd-button-padding-vertical, 0.3125rem) var(--pd-button-padding-horizontal, 0.625rem);\n    position: relative;\n    cursor: pointer;\n\n    &.pd-button-large {\n        padding: 0.625rem 1.25rem;\n    }\n\n    &.pd-button-small {\n        padding: 0.125rem 0.5rem;\n    }\n\n    &.pd-button-success {\n        @include button-scheme(success);\n        @include button-icon-scheme(success);\n    }\n\n    &.pd-button-danger {\n        @include button-scheme(danger);\n        @include button-icon-scheme(danger);\n    }\n\n    &.pd-button-warning {\n        @include button-scheme(warning);\n        @include button-icon-scheme(warning);\n    }\n\n    &.pd-button-info {\n        @include button-scheme(info);\n        @include button-icon-scheme(info);\n    }\n\n    &.pd-button-light {\n        @include button-scheme(light);\n        @include button-icon-scheme(light);\n    }\n\n    &.pd-button-dark {\n        @include button-scheme(dark);\n        @include button-icon-scheme(dark);\n    }\n\n    &:disabled {\n        cursor: default;\n    }\n}\n\n.pd-link {\n    display: flex;\n    align-items: center;\n    color: $cyan-9;\n    text-decoration: none;\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n    padding: 0;\n\n    * {\n        font-weight: 500;\n    }\n\n    &:hover:not(:disabled) {\n        color: $cyan-6;\n\n        ::slotted(pd-icon) {\n            fill: $cyan-6;\n        }\n    }\n\n    &:focus-visible {\n        @include focus;\n    }\n\n    &:active:not(:disabled) {\n        color: $cyan-3;\n\n        ::slotted(pd-icon) {\n            fill: $cyan-3;\n        }\n    }\n\n    ::slotted(pd-icon) {\n        fill: $cyan-9;\n    }\n\n    &:disabled {\n        color: $gray;\n        cursor: default;\n\n        ::slotted(pd-icon) {\n            fill: $gray;\n        }\n    }\n}\n\nho .pd-button-icon-left,\n.pd-button-icon-right {\n    display: flex;\n    align-items: center;\n    margin-top: -0.25rem;\n    margin-bottom: -0.25rem;\n}\n\n.pd-button-icon-left {\n    margin-right: 0.375rem;\n}\n\n.pd-button-icon-right {\n    margin-left: 0.375rem;\n}\n","import { AttachInternals, Component, ComponentInterface, h, Host, Listen, Prop } from '@stencil/core';\nimport { PdButtonColor, PdButtonSize, PdButtonType, PdIconLocation } from '../../types';\n\n/**\n * @slot - button content\n * @slot icon - slot for icons\n */\n@Component({\n    tag: 'pd-button',\n    styleUrl: 'pd-button.scss',\n    shadow: true,\n    formAssociated: true,\n})\nexport class Button implements ComponentInterface {\n    /**\n     * Sets button to disbaled state\n     */\n    @Prop() disabled = false;\n\n    /**\n     * Sets button type |button|submit|reset|\n     */\n    @Prop() type: PdButtonType = 'button';\n\n    /**\n     * Color schema used for the button\n     */\n    @Prop() color: PdButtonColor = 'primary';\n\n    /**\n     * Button size\n     */\n    @Prop() size: PdButtonSize = 'normal';\n\n    /**\n     * Use outline schema\n     */\n    @Prop() outline: boolean = false;\n\n    /**\n     * Sets button to 100% width\n     */\n    @Prop() fullWidth: boolean = false;\n\n    /**\n     * Set href to create a link button\n     */\n    @Prop() href: string;\n\n    /**\n     * Set href to create a link button\n     */\n    @Prop() showAsLink: boolean = false;\n\n    /**\n     * Sets target for link button e.g. '_blank'\n     */\n    @Prop() target: string = '_blank';\n\n    /**\n     * Sets the position of the icon\n     */\n    @Prop({ attribute: 'icon-location' }) iconLocation: PdIconLocation = 'none';\n\n    /**\n     * Internals for form association\n     */\n    @AttachInternals() internals: ElementInternals;\n\n    /**\n     * Click event\n     */\n    @Listen('click', { capture: true })\n    handleClick(e: Event) {\n        if (this.disabled) {\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n        if (this.type === 'submit' && this.internals.form) {\n            this.internals.form.submit();\n        }\n        return e;\n    }\n\n    public render() {\n        const { href, target, type, disabled } = this;\n        const TagType = href ? 'a' : 'button';\n        const role = 'button';\n        const typeAttrs = TagType === 'button' ? { type, role } : { href, target };\n        return (\n            <Host class={{ 'pd-button-fullwidth': this.fullWidth }}>\n                <TagType\n                    {...typeAttrs}\n                    disabled={disabled}\n                    class={{\n                        'pd-button': TagType === 'button' && !this.showAsLink,\n                        'pd-link': this.showAsLink ? true : TagType !== 'button',\n                        [`pd-button-${this.color}`]: true,\n                        [`pd-button-${this.size}`]: true,\n                        'pd-button-outline': this.outline,\n                    }}\n                >\n                    {this.renderIcon('left')}\n                    {this.renderCenter()}\n                    {this.renderIcon('right')}\n                </TagType>\n            </Host>\n        );\n    }\n\n    private renderIcon(location: PdIconLocation) {\n        if (location !== this.iconLocation) return;\n        return (\n            <div class={`pd-button-icon-${location}`}>\n                <slot name=\"icon\"></slot>\n            </div>\n        );\n    }\n\n    private renderCenter() {\n        if (this.iconLocation === 'center') return this.renderIcon('center');\n        return <slot></slot>;\n    }\n}\n"],"version":3}