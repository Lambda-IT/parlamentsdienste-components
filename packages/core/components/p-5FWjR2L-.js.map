{"file":"p-5FWjR2L-.js","mappings":";;AAAA,MAAM,aAAa,GAAG,ouNAAouN;;MCO7uN,QAAQ,iBAAAA,kBAAA,CAAA,MAAA,QAAA,SAAAC,CAAA,CAAA;;;;;;;AACjB;;AAEG;IACK,IAAI,GAAW,EAAE;AAEzB;;AAEG;IACK,QAAQ,GAAY,KAAK;AAEjC;;AAEG;IACK,QAAQ,GAAG,KAAK;AAExB;;AAEG;IACK,QAAQ,GAAG,KAAK;AAExB;;AAEG;IACsB,OAAO,GAAY,KAAK;AAEjD;;AAEG;IACsB,KAAK,GAAY,KAAK;AAE/C;;AAEG;IACK,eAAe,GAAY,KAAK;AAExC;;AAEG;AACK,IAAA,IAAI;AAEZ;;AAEG;IACK,KAAK,GAAY,KAAK;AAE9B;;AAEG;IACK,cAAc,GAAY,KAAK;AAEH,IAAA,SAAS;IAErC,OAAO,GAAG,MAAK;AACnB,QAAA,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO;AAC5B,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO;QACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACnC,KAAC;IAEM,MAAM,GAAA;QACT,QACI,CAAA,CAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAC,IAAI,EAAC,UAAU,EAAA,cAAA,EAAe,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,OAAO,EAAiB,eAAA,EAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,OAAO,EAAA,EAChH,CAAA,CAAA,OAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,KAAK,EAAE;AACH,gBAAA,mBAAmB,EAAE,IAAI;gBACzB,sBAAsB,EAAE,IAAI,CAAC,QAAQ;gBACrC,mBAAmB,EAAE,IAAI,CAAC,KAAK;aAClC,EACD,KAAK,EAAE,IAAI,CAAC,cAAc,GAAG,EAAE,+BAA+B,EAAE,QAAQ,EAAE,GAAG,EAAE,eACrE,mBAAmB,EAAA,EAE7B,CACI,CAAA,OAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,mBAAmB,EACzB,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EACxC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,CAAA,EAAG,IAAI,CAAC,KAAK,EAAE,EACtB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,OAAO,EAAE,IAAI,CAAC,OAAO,EACvB,CAAA,EACF,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,KAAK,EAAE;AACH,gBAAA,mBAAmB,EAAE,IAAI;AACzB,gBAAA,qBAAqB,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,eAAe;AAC9D,aAAA,EAAA,EAED,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAE,EAAE,uBAAuB,EAAE,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAQ,CAAA,EACtF,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAE,EAAE,2BAA2B,EAAE,IAAI,CAAC,eAAe,EAAE,EAAA,CAAQ,CACvE,EACN,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAC,kBAAkB,EAAA,WAAA,EAAW,kBAAkB,EAAA,EACrD,IAAI,CAAC,IAAI,CACR,CACF,CACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-checkbox/pd-checkbox.scss?tag=pd-checkbox&encapsulation=shadow","src/components/pd-checkbox/pd-checkbox.tsx"],"sourcesContent":[":host {\n    display: block;\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    appearance: none;\n    outline: none;\n}\n\n// readonly styling\n\n/**\n * @prop --pd-checkbox-vertical-adjust: top margin of label\n * @prop --pd-checkbox-text-padding-left: padding on the left side of text\n * @prop --pd-checkbox-background-color: background color\n */\n.pd-checkbox-label {\n    display: flex;\n    align-items: center;\n    margin-top: var(--pd-checkbox-vertical-adjust, inherit);\n\n    .pd-checkbox-input {\n        @include visually-hidden;\n\n        & + .pd-checkbox-inner {\n            cursor: pointer;\n            position: relative;\n            width: 1.25rem;\n            min-width: 1.25rem;\n            height: 1.25rem;\n            background-color: var(--pd-checkbox-background-color, transparent);\n            border-radius: 0.25rem;\n\n            &:before,\n            &:after {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n            }\n\n            &:before {\n                content: '';\n                background-color: transparent;\n            }\n\n            &:after {\n                content: '';\n                border: 0.125rem solid setcolor(primary, enabled);\n                border-radius: 0.25rem;\n            }\n\n            &.pd-checkbox-checked {\n                background-color: setcolor(primary, enabled);\n            }\n\n            .pd-checkbox-checkmark {\n                position: absolute;\n                display: inline-block;\n                transform: rotate(45deg);\n                height: 0.75rem;\n                width: 0.375rem;\n                top: 0.15rem;\n                left: 0.45rem;\n                border-bottom: 0.125rem solid $white;\n                border-right: 0.125rem solid $white;\n            }\n\n            .pd-checkbox-indeterminate {\n                position: absolute;\n                display: inline-block;\n                transform: rotate(90deg);\n                height: 0.75rem;\n                width: 0.375rem;\n                top: 0.15rem;\n                left: 0.45rem;\n                border-bottom: none;\n                border-right: 0.125rem solid $white;\n            }\n        }\n\n        &:hover:enabled {\n            & + .pd-checkbox-inner {\n                &:after {\n                    border-color: setcolor(primary, hover);\n                }\n                &.pd-checkbox-checked {\n                    background-color: setcolor(primary, hover);\n                }\n            }\n        }\n\n        &:active:enabled {\n            & + .pd-checkbox-inner {\n                &:after {\n                    border-color: setcolor(primary, pressed);\n                }\n                &.pd-checkbox-checked {\n                    background-color: setcolor(primary, pressed);\n                }\n            }\n        }\n\n        &:focus-visible:enabled {\n            & + .pd-checkbox-inner {\n                background-color: $focus;\n                &:after {\n                    border-color: $cyan-9;\n                }\n                &.pd-checkbox-checked {\n                    background-color: $focus;\n                    &:after {\n                        border-color: $focus;\n                    }\n                    .pd-checkbox-checkmark,\n                    .pd-checkbox-indeterminate {\n                        border-color: $cyan-9;\n                    }\n                }\n            }\n        }\n\n        &:disabled {\n            & + .pd-checkbox-inner {\n                cursor: default;\n                &:after {\n                    border-color: setcolor(primary, disabled);\n                }\n\n                &.pd-checkbox-checked {\n                    background-color: setcolor(primary, disabled);\n                }\n            }\n\n            & ~ .pd-checkbox-text {\n                font-style: italic;\n            }\n        }\n    }\n\n    &.pd-checkbox-readonly {\n        pointer-events: none;\n        cursor: default;\n\n        & > .pd-checkbox-input {\n            & + .pd-checkbox-inner {\n                background-color: setcolor(primary, readonly);\n                &.pd-checkbox-checked {\n                    background-color: setcolor(primary, readonly);\n                }\n                &:after {\n                    border-color: setcolor(primary, readonly);\n                }\n                .pd-checkbox-checkmark,\n                .pd-checkbox-indeterminate {\n                    border-color: $pd-black;\n                    border-color: $pd-black;\n                }\n            }\n\n            & ~ .pd-checkbox-text {\n                font-style: normal;\n            }\n        }\n    }\n\n    &.pd-checkbox-error {\n        .pd-checkbox-input {\n            & + .pd-checkbox-inner {\n                &:after {\n                    border-color: setcolor(danger, enabled);\n                }\n                &.pd-checkbox-checked {\n                    background-color: setcolor(danger, enabled);\n                    &:after {\n                        border-color: setcolor(danger, enabled);\n                    }\n                    .pd-checkbox-checkmark,\n                    .pd-checkbox-indeterminate {\n                        border-color: setcolor(danger, enabledContrast);\n                    }\n                }\n            }\n            &:hover:enabled {\n                & + .pd-checkbox-inner {\n                    &:after {\n                        border-color: setcolor(danger, hover);\n                    }\n                    &.pd-checkbox-checked {\n                        background-color: setcolor(danger, hover);\n                        &:after {\n                            border-color: setcolor(danger, hover);\n                        }\n                        .pd-checkbox-checkmark,\n                        .pd-checkbox-indeterminate {\n                            border-color: setcolor(danger, hoverContrast);\n                        }\n                    }\n                }\n            }\n\n            &:active:enabled {\n                & + .pd-checkbox-inner {\n                    &:after {\n                        border-color: setcolor(danger, pressed);\n                    }\n                    &.pd-checkbox-checked {\n                        background-color: setcolor(danger, pressed);\n                        &:after {\n                            border-color: setcolor(danger, pressed);\n                        }\n                        .pd-checkbox-checkmark,\n                        .pd-checkbox-indeterminate {\n                            border-color: setcolor(danger, pressedContrast);\n                        }\n                    }\n                }\n            }\n\n            &:focus-visible:enabled {\n                & + .pd-checkbox-inner {\n                    background-color: $focus;\n                    &:after {\n                        border-color: setcolor(danger, enabled);\n                    }\n                    &.pd-checkbox-checked {\n                        background-color: $focus;\n                        &:after {\n                            border-color: $focus;\n                        }\n                        .pd-checkbox-checkmark,\n                        .pd-checkbox-indeterminate {\n                            border-color: $cyan-9;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    .pd-checkbox-text {\n        padding-left: var(--pd-checkbox-text-padding-left, 0.625rem);\n        flex-grow: 1;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n}\n","import { Component, ComponentInterface, Event, EventEmitter, h, Host, Prop } from '@stencil/core';\n\n@Component({\n    tag: 'pd-checkbox',\n    styleUrl: 'pd-checkbox.scss',\n    shadow: true,\n})\nexport class Checkbox implements ComponentInterface {\n    /**\n     * Checkbox description text\n     */\n    @Prop() text: string = '';\n\n    /**\n     * Sets checkbox to disabled state\n     */\n    @Prop() disabled: boolean = false;\n\n    /**\n     * If `true`, the user cannot modify the value.\n     */\n    @Prop() readonly = false;\n\n    /**\n     * If `true`, the user must fill in a value before submitting a form.\n     */\n    @Prop() required = false;\n\n    /**\n     * Sets check state of the checkbox true/false\n     */\n    @Prop({ mutable: true }) checked: boolean = false;\n\n    /**\n     * value of checkbox\n     */\n    @Prop({ mutable: true }) value: boolean = false;\n\n    /**\n     * indeterminate state\n     */\n    @Prop() isIndeterminate: boolean = false;\n\n    /**\n     * checkbox name\n     */\n    @Prop() name: string;\n\n    /**\n     * Shows error state\n     */\n    @Prop() error: boolean = false;\n\n    /**\n     * Default vertical adjustment for inline forms\n     */\n    @Prop() verticalAdjust: boolean = false;\n\n    @Event({ eventName: 'pd-checked' }) pdChecked: EventEmitter<boolean>;\n\n    private onClick = () => {\n        this.checked = !this.checked;\n        this.value = this.checked;\n        this.pdChecked.emit(this.value);\n    };\n\n    public render() {\n        return (\n            <Host role=\"checkbox\" aria-checked={this.checked ? 'true' : 'false'} aria-disabled={this.disabled ? 'true' : 'false'}>\n                <label\n                    class={{\n                        'pd-checkbox-label': true,\n                        'pd-checkbox-readonly': this.readonly,\n                        'pd-checkbox-error': this.error,\n                    }}\n                    style={this.verticalAdjust ? { '--pd-checkbox-vertical-adjust': '2.3rem' } : {}}\n                    data-test=\"pd-checkbox-label\"\n                >\n                    <input\n                        class=\"pd-checkbox-input\"\n                        type=\"Checkbox\"\n                        checked={this.checked}\n                        disabled={this.disabled || this.readonly}\n                        required={this.required}\n                        value={`${this.value}`}\n                        name={this.name}\n                        onClick={this.onClick}\n                    />\n                    <div\n                        class={{\n                            'pd-checkbox-inner': true,\n                            'pd-checkbox-checked': this.checked || this.isIndeterminate,\n                        }}\n                    >\n                        <div class={{ 'pd-checkbox-checkmark': this.checked && !this.isIndeterminate }}></div>\n                        <div class={{ 'pd-checkbox-indeterminate': this.isIndeterminate }}></div>\n                    </div>\n                    <div class=\"pd-checkbox-text\" data-test=\"pd-checkbox-text\">\n                        {this.text}\n                    </div>\n                </label>\n            </Host>\n        );\n    }\n}\n"],"version":3}