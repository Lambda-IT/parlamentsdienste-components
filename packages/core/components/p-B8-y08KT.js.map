{"file":"p-B8-y08KT.js","mappings":";;;AAAA,MAAM,SAAS,GAAG,8gDAA8gD;;MCWnhD,IAAI,iBAAAA,kBAAA,CAAA,MAAA,IAAA,SAAAC,CAAA,CAAA;;;;;;;;AACb;;AAEG;IACK,QAAQ,GAAY,KAAK;AAEjC;;AAEG;IACK,QAAQ,GAAY,KAAK;AAEjC;;AAEG;IACsB,OAAO,GAAY,KAAK;AAEjD;;AAEG;IACK,IAAI,GAAa,MAAM;AAE/B;;AAEG;AACqC,IAAA,UAAU;AAElD;;AAEG;AACoC,IAAA,SAAS;AAEhD;;AAEG;IAEH,WAAW,GAAA;QACP,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClC,YAAA,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO;YAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;;;AAIjC,IAAA,aAAa,CAAC,CAAQ,EAAA;QAC1B,CAAC,CAAC,cAAc,EAAE;QAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ;AAAE,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;;IAG7D,MAAM,GAAA;AACT,QAAA,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI;QAC/B,MAAM,IAAI,GAAG,QAAQ;QACrB,MAAM,QAAQ,GAAG,IAAI;AAErB,QAAA,QACI,CACI,CAAA,QAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,QAAQ,EAAE,QAAQ,EAClB,IAAI,EAAE,IAAI,EACV,KAAK,EAAE;AACH,gBAAA,SAAS,EAAE,IAAI;AACf,gBAAA,iBAAiB,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,KAAK,QAAQ,GAAG,IAAI,GAAG,KAAK;gBACnE,kBAAkB,EAAE,IAAI,CAAC,QAAQ;gBACjC,kBAAkB,EAAE,IAAI,CAAC,QAAQ;AACjC,gBAAA,CAAC,CAAW,QAAA,EAAA,IAAI,CAAE,CAAA,GAAG,IAAI;AAC5B,aAAA,EAAA,EAEA,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,OAAO,KAC9B,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAC,gCAAgC,EAAA,EACvC,CAAS,CAAA,SAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAC,cAAc,EAAW,CAAA,CACrD,CACT,EACD,CAAa,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,EACZ,IAAI,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,KAChC,CAAA,CAAA,QAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,WAAA,EACc,gBAAgB,EAC1B,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,EACtD,KAAK,EAAC,gDAAgD,EACtD,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAA,EAEnC,CAAA,CAAA,SAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAS,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAC,YAAY,EAAA,CAAW,CAChD,CACZ,CACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-chip/pd-chip.scss?tag=pd-chip&encapsulation=shadow","src/components/pd-chip/pd-chip.tsx"],"sourcesContent":["@include resetControlFonts;\n\n:host {\n    display: inline-block;\n    vertical-align: bottom;\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    appearance: none;\n    outline: none;\n}\n\n.pd-chip {\n    display: flex;\n    align-items: center;\n    border-radius: 2rem;\n    padding: 0.25rem 0.75rem;\n    position: relative;\n    cursor: pointer;\n    border: none;\n    background-color: $bon-jour;\n    color: $black;\n    font-weight: 700;\n\n    &.pd-chip-checked {\n        background-color: setcolor(primary, pressed);\n        color: $blue-whale;\n\n        .pd-chip-icon {\n            fill: $blue-whale;\n        }\n    }\n\n    &:hover:enabled {\n        background-color: setcolor(primary, hover);\n        color: setcolor(primary, hoverContrast);\n\n        .pd-chip-icon {\n            fill: setcolor(primary, hoverContrast);\n        }\n    }\n\n    &:disabled {\n        background-color: setcolor(primary, disabled);\n        color: setcolor(primary, disabledContrast);\n        font-weight: 500;\n        font-style: italic;\n        cursor: default;\n\n        .pd-chip-icon {\n            fill: setcolor(primary, disabledContrast);\n        }\n    }\n\n    &:active:enabled {\n        background-color: setcolor(primary, enabled);\n        color: setcolor(primary, enabledContrast);\n        .pd-chip-icon {\n            fill: setcolor(primary, enabledContrast);\n        }\n    }\n\n    &.pd-chip-readonly {\n        pointer-events: none;\n        background-color: $gray-3;\n        border-color: $gray-3;\n        color: $pd-black;\n        font-weight: 500;\n        cursor: default;\n    }\n\n    &:focus-visible {\n        background-color: $focus;\n        color: $blue-whale;\n        .pd-chip-icon {\n            fill: $blue-whale;\n        }\n    }\n}\n\n.pd-chip-icon-left,\n.pd-chip-icon-right {\n    display: flex;\n    align-items: center;\n}\n\n.pd-chip-icon-left {\n    margin-right: 0.375rem;\n}\n\n.pd-chip-icon-right {\n    margin-left: 0.375rem;\n}\n\n.pd-chip-remove {\n    @include invisibleButton;\n    margin-left: 0.375rem;\n}\n","import { Component, ComponentInterface, Event, EventEmitter, h, Listen, Prop } from '@stencil/core';\nimport { ChipType } from '../../types';\n\n/**\n * @slot - Chip content\n */\n@Component({\n    tag: 'pd-chip',\n    styleUrl: 'pd-chip.scss',\n    shadow: true,\n})\nexport class Chip implements ComponentInterface {\n    /**\n     * Sets chip to disabled state\n     */\n    @Prop() disabled: boolean = false;\n\n    /**\n     * Sets chip to readonly state\n     */\n    @Prop() readonly: boolean = false;\n\n    /**\n     * Sets chip to checked state\n     */\n    @Prop({ mutable: true }) checked: boolean = false;\n\n    /**\n     * Sets chip type |text|toggle|filter|\n     */\n    @Prop() type: ChipType = 'text';\n\n    /**\n     * Event for clicking the cross to remove a chip\n     */\n    @Event({ eventName: 'pd-remove-chip' }) removeChip!: EventEmitter;\n\n    /**\n     * Event for check chip\n     */\n    @Event({ eventName: 'pd-check-chip' }) checkChip!: EventEmitter;\n\n    /**\n     * Click event\n     */\n    @Listen('click', { capture: true })\n    handleClick() {\n        if (!this.disabled && !this.readonly) {\n            this.checked = !this.checked;\n            this.checkChip.emit(this.checked);\n        }\n    }\n\n    private removeClicked(e: Event) {\n        e.preventDefault();\n        if (!this.disabled && !this.readonly) this.removeChip.emit(this);\n    }\n\n    public render() {\n        const { type, disabled } = this;\n        const role = 'button';\n        const iconSize = 1.25;\n\n        return (\n            <button\n                disabled={disabled}\n                role={role}\n                class={{\n                    'pd-chip': true,\n                    'pd-chip-checked': this.checked || type === 'toggle' ? true : false,\n                    'pd-chip-disabled': this.disabled,\n                    'pd-chip-readonly': this.readonly,\n                    [`pd-chip-${type}`]: true,\n                }}\n            >\n                {type === 'filter' && this.checked && (\n                    <div class=\"pd-chip-icon pd-chip-icon-left\">\n                        <pd-icon size={iconSize} name=\"confirm_bold\"></pd-icon>\n                    </div>\n                )}\n                <slot></slot>\n                {type === 'toggle' && !this.readonly && (\n                    <button\n                        data-test=\"pd-chip-remove\"\n                        tabindex={this.disabled || this.readonly ? '-1' : null}\n                        class=\"pd-chip-remove pd-chip-icon pd-chip-icon-right\"\n                        onClick={e => this.removeClicked(e)}\n                    >\n                        <pd-icon size={iconSize} name=\"close_bold\"></pd-icon>\n                    </button>\n                )}\n            </button>\n        );\n    }\n}\n"],"version":3}