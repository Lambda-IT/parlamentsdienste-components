{"file":"pd-panel-header.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-panel-header/pd-panel-header.scss?tag=pd-panel-header&encapsulation=shadow","src/components/pd-panel-header/pd-panel-header.tsx"],"sourcesContent":[":host {\n    display: flex;\n    align-items: center;\n    background-color: $blue-whale;\n    color: white;\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem;\n    font-weight: 700;\n    transition: border-radius 0.3s ease-in-out;\n}\n\n:host(.pd-panel-header-collapsed) {\n    border-bottom-left-radius: 0.25rem;\n    border-bottom-right-radius: 0.25rem;\n}\n\n:host(.pd-panel-header-hover) {\n    background-color: $juniper;\n    cursor: pointer;\n\n    .pd-panel-header-collapse {\n        fill: $white;\n    }\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    outline: none;\n    appearance: none;\n}\n\n.pd-panel-header-icons {\n    margin-right: 0.875rem;\n    display: flex;\n    fill: setcolor(primary, pressed);\n\n    ::slotted(pd-icon:hover),\n    pd-icon:hover {\n        fill: $white;\n        cursor: pointer;\n    }\n}\n\n.pd-panel-header-content {\n    display: flex;\n    flex: 1 1 auto;\n    flex-direction: column;\n    justify-content: center;\n    min-height: 3rem;\n    padding: 0.625rem 1rem;\n\n    .pd-panel-header-subtitle {\n        font-size: 1rem;\n        font-weight: 500;\n        color: $white;\n    }\n}\n\n.pd-panel-header-collapse {\n    @include invisibleButton;\n    display: flex;\n    align-items: center;\n}\n\n/** Subpanel **/\n\n:host(.pd-panel-header-subpanel) {\n    background-color: transparent;\n    border-radius: 0;\n    color: $blue-whale;\n    min-height: 2.75rem;\n\n    .pd-panel-header-content {\n        padding: 0.625rem 0;\n\n        .pd-panel-header-subtitle {\n            color: $black;\n        }\n    }\n\n    .pd-panel-header-icons {\n        margin-right: 0;\n    }\n\n    ::slotted(pd-icon:hover),\n    pd-icon:hover {\n        fill: $cyan-6;\n    }\n}\n\n:host(.pd-panel-header-subpanel.pd-panel-header-hover) {\n    .pd-panel-header-collapse {\n        fill: $cyan-6;\n    }\n}\n","import { Component, ComponentInterface, Element, Event, EventEmitter, h, Host, Method, State } from '@stencil/core';\n\n/**\n * @slot - Header content\n * @slot subtitle - panel header subtitle content\n * @slot icons - Additional icons left of carret\n */\n@Component({\n    tag: 'pd-panel-header',\n    styleUrl: 'pd-panel-header.scss',\n    shadow: true,\n})\nexport class PanelHeader implements ComponentInterface {\n    @Element() element: HTMLElement;\n\n    @State() collapsed: boolean = false;\n    @State() private hover = false;\n\n    /**\n     * Used for panel hover stylings\n     */\n    @Event({ eventName: 'pd-hover' }) pdHover!: EventEmitter<boolean>;\n    private panel?: HTMLPdPanelElement;\n\n    private collapsible: boolean = false;\n    private subpanel: boolean = false;\n\n    public connectedCallback() {\n        this.panel = this.element.closest('pd-panel') as HTMLPdPanelElement;\n        if (this.panel) {\n            this.collapsible = this.panel.collapsible;\n            this.collapsed = this.panel.collapsed;\n            this.subpanel = this.panel.subpanel;\n        }\n    }\n\n    /**\n     * Update panel collapsed state\n     */\n    private toggle(e: Event) {\n        e.stopPropagation();\n        this.collapsed = !this.collapsed;\n        this.panel.collapsed = this.collapsed;\n    }\n\n    @Method()\n    public async setCollapsed(collapsed: boolean) {\n        this.collapsed = collapsed;\n    }\n\n    private handleHover(hover: boolean) {\n        this.hover = hover;\n        this.pdHover.emit(hover);\n    }\n\n    public render() {\n        return (\n            <Host\n                class={{\n                    'pd-panel-header-collapsed': this.collapsed,\n                    'pd-panel-header-subpanel': this.subpanel,\n                    'pd-panel-header-hover': this.hover && this.collapsible,\n                }}\n            >\n                <div class=\"pd-panel-header-content\" onMouseOver={() => this.handleHover(true)} onMouseOut={() => this.handleHover(false)} onClick={e => this.toggle(e)}>\n                    <slot></slot>\n                    <div class=\"pd-panel-header-subtitle\">\n                        <slot name=\"subtitle\"></slot>\n                    </div>\n                </div>\n                <div class=\"pd-panel-header-icons\">\n                    <slot name=\"icons\"></slot>\n                    {this.rendercollapsible()}\n                </div>\n            </Host>\n        );\n    }\n\n    private rendercollapsible() {\n        if (!this.collapsible) return;\n\n        return (\n            <button\n                class=\"pd-panel-header-collapse\"\n                onMouseOver={() => this.handleHover(true)}\n                onMouseOut={() => this.handleHover(false)}\n                onClick={e => this.toggle(e)}\n                data-test=\"pd-panel-header-collapse\"\n            >\n                <pd-icon name=\"caret\" size={2.4} rotate={this.collapsed ? 0 : 180}></pd-icon>\n            </button>\n        );\n    }\n}\n"],"version":3}