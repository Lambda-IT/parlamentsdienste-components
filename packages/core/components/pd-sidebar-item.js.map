{"file":"pd-sidebar-item.js","mappings":";;;AAAA,MAAM,gBAAgB,GAAG,m8BAAm8B;;MCO/8B,WAAW,iBAAAA,kBAAA,CAAA,MAAA,WAAA,SAAAC,CAAA,CAAA;;;;;;AACpB;;AAEG;IACK,IAAI,GAAW,EAAE;AAEzB;;AAEG;IACK,MAAM,GAAY,KAAK;AAE/B;;AAEG;AACK,IAAA,IAAI;AAEZ;;AAEG;AACK,IAAA,IAAI;AAEZ;;AAEG;AACK,IAAA,QAAQ;AAEhB;;AAEG;IACK,IAAI,GAAW,CAAC;AAExB;;AAEG;IACK,MAAM,GAAW,QAAQ;IAE1B,MAAM,GAAA;QACT,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI;QAC3C,MAAM,OAAO,GAAG,IAAI,GAAG,GAAG,GAAG,QAAQ;AACrC,QAAA,MAAM,SAAS,GAAG,OAAO,KAAK,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE;AAE9D,QAAA,QACI,CAAC,CAAA,OAAO,EAAK,EAAA,GAAA,EAAA,0CAAA,EAAA,GAAA,SAAS,EAAE,KAAK,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,mBAAmB,EAAE,MAAM,EAAE,EAAA,EACnF,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,iBAAiB,EAAA,EAAE,IAAI,CAAC,UAAU,EAAE,CAAO,EACtD,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,iBAAiB,EAAW,WAAA,EAAA,sBAAsB,IACxD,IAAI,CACH,CACA;;IAIV,UAAU,GAAA;QACd,IAAI,IAAI,CAAC,QAAQ;AAAE,YAAA,OAAO,CAAS,CAAA,SAAA,EAAA,EAAA,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,GAAY;QACnF,OAAO,CAAS,CAAA,SAAA,EAAA,EAAA,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAY,WAAA,EAAA,sBAAsB,GAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-sidebar-item/pd-sidebar-item.scss?tag=pd-sidebar-item&encapsulation=shadow","src/components/pd-sidebar-item/pd-sidebar-item.tsx"],"sourcesContent":["@include resetControlFonts;\n\n:host {\n    display: block;\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    outline: none;\n}\n\n.pd-sidebar-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 5.5rem;\n    height: 5rem;\n    color: $blue-whale;\n    fill: $blue-whale;\n    border: none;\n    overflow: hidden;\n    text-decoration: none;\n    background-color: transparent;\n    cursor: pointer;\n\n    & * {\n        font-size: 0.6875rem;\n        line-height: 0.75rem;\n        font-weight: 700;\n    }\n\n    &.pd-sidebar-active {\n        background-color: $wild-sand;\n        color: $blue-whale;\n    }\n\n    &:hover {\n        background-color: setcolor(primary, hover);\n        color: setcolor(primary, hoverContrast);\n        fill: setcolor(primary, hoverContrast);\n    }\n\n    &:focus-visible {\n        background-color: $yellow-2;\n        color: $blue-whale;\n        fill: $blue-whale;\n    }\n\n    &:active {\n        background-color: setcolor(primary, pressed);\n        color: setcolor(primary, pressedContrast);\n        fill: setcolor(primary, pressedContrast);\n    }\n}\n\n.pd-sidebar-text {\n    text-align: center;\n    padding: 0 0.375rem;\n}\n\n.pd-sidebar-icon {\n    padding: 0.375rem;\n    font-weight: normal;\n    font-size: 1rem;\n}\n","import { Component, ComponentInterface, h, Prop } from '@stencil/core';\n\n@Component({\n    tag: 'pd-sidebar-item',\n    styleUrl: 'pd-sidebar-item.scss',\n    shadow: true,\n})\nexport class SidebarItem implements ComponentInterface {\n    /**\n     * Item text\n     */\n    @Prop() text: string = '';\n\n    /**\n     * show an item as active\n     */\n    @Prop() active: boolean = false;\n\n    /**\n     * Set href to create a link button\n     */\n    @Prop() href: string;\n\n    /**\n     * Path to an svg asset\n     */\n    @Prop() icon: string;\n\n    /**\n     * Name of an icon from the library\n     */\n    @Prop() iconName: string;\n\n    /**\n     * Icon size\n     */\n    @Prop() size: number = 2;\n\n    /**\n     * Sets target for link button e.g. '_blank'\n     */\n    @Prop() target: string = '_blank';\n\n    public render() {\n        const { href, active, text, target } = this;\n        const TagType = href ? 'a' : 'button';\n        const typeAttrs = TagType === 'button' ? {} : { href, target };\n\n        return (\n            <TagType {...typeAttrs} class={{ 'pd-sidebar-item': true, 'pd-sidebar-active': active }}>\n                <div class=\"pd-sidebar-icon\">{this.renderIcon()}</div>\n                <div class=\"pd-sidebar-text\" data-test=\"pd-sidebar-item-text\">\n                    {text}\n                </div>\n            </TagType>\n        );\n    }\n\n    private renderIcon() {\n        if (this.iconName) return <pd-icon name={this.iconName} size={this.size}></pd-icon>;\n        return <pd-icon src={this.icon} size={this.size} data-test=\"pd-sidebar-item-icon\"></pd-icon>;\n    }\n}\n"],"version":3}