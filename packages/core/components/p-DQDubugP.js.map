{"file":"p-DQDubugP.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-menu/pd-menu.scss?tag=pd-menu&encapsulation=shadow","src/components/pd-menu/pd-menu.tsx"],"sourcesContent":["@include resetControlFonts;\n\n:host {\n    display: block;\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    outline: none;\n}\n\n/**\n * @prop --pd-menu-max-width: Max width for\n * @prop --pd-menu-vertical-padding: Possibility to change inner height of the dropdown\n * @prop --pd-menu-horizontal-padding: Possibility to change inner width of the dropdown\n * @prop --pd-menu-label-color: Possibility to change color of label and icon\n * @prop --pd-menu-label-weight: Possibility to change the label font-weight\n */\n.pd-menu {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n\n    .pd-menu-label {\n        color: var(--pd-menu-label-color, setcolor(primary, enabled));\n        font-weight: var(--pd-menu-label-weight, 400);\n        size: 1rem;\n        line-height: 2.375rem;\n        padding-right: var(--pd-menu-horizontal-padding, 0.4em);\n    }\n\n    .pd-menu-button {\n        @include invisibleButton;\n        padding-top: var(--pd-menu-vertical-padding, 0.2em);\n        padding-bottom: var(--pd-menu-vertical-padding, 0.2em);\n        padding-left: 0;\n        padding-right: var(--pd-menu-horizontal-padding, 0.4em);\n        display: flex;\n        align-items: center;\n\n        &.pd-menu-large {\n            --pd-menu-vertical-padding: 0.5em;\n        }\n\n        &.pd-menu-small {\n            --pd-menu-vertical-padding: 0;\n        }\n\n        &:hover {\n            .pd-menu-label {\n                color: setcolor(primary, hover);\n            }\n\n            .pd-menu-icon {\n                fill: setcolor(primary, hover);\n            }\n        }\n\n        &:focus-visible {\n            background-color: $focus;\n            .pd-menu-label {\n                color: $blue-whale;\n            }\n            .pd-menu-icon {\n                fill: $blue-whale;\n            }\n        }\n\n        &:active {\n            .pd-menu-label {\n                color: setcolor(primary, pressed);\n            }\n\n            .pd-menu-icon {\n                fill: setcolor(primary, pressed);\n            }\n        }\n\n        .pd-menu-icon {\n            fill: var(--pd-menu-label-color, setcolor(primary, enabled));\n        }\n    }\n\n    &.pd-menu-inverted {\n        .pd-menu-button {\n            .pd-menu-label {\n                color: $white;\n            }\n            .pd-menu-icon {\n                fill: $white;\n            }\n\n            &:hover {\n                .pd-menu-label {\n                    color: setcolor(dark, hover);\n                }\n                .pd-menu-icon {\n                    fill: setcolor(dark, hover);\n                }\n            }\n            &:active {\n                .pd-menu-label {\n                    color: setcolor(dark, pressed);\n                }\n                .pd-menu-icon {\n                    fill: setcolor(dark, pressed);\n                }\n            }\n\n            &:focus-visible {\n                background-color: $focus;\n                .pd-menu-label {\n                    color: $blue-whale;\n                }\n                .pd-menu-icon {\n                    fill: $blue-whale;\n                }\n            }\n        }\n    }\n}\n\n.pd-menu-content {\n    background-color: $white;\n    z-index: 99;\n    min-width: 250px;\n    width: max-content;\n    max-width: var(--pd-menu-max-width, undefined);\n    overflow: auto;\n    box-shadow: 0px 0px 8px $gray-6;\n}\n","import { createPopper, Instance } from '@popperjs/core';\nimport {\n    Component,\n    ComponentDidLoad,\n    ComponentDidUpdate,\n    ComponentInterface,\n    Element,\n    h,\n    Host,\n    Listen,\n    Method,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { PdButtonSize, PdPlacement } from '../../types';\n\n/**\n * @slot - Menu items\n */\n@Component({\n    tag: 'pd-menu',\n    styleUrl: 'pd-menu.scss',\n    assetsDirs: ['assets-menu'],\n    shadow: true,\n})\nexport class Menu implements ComponentInterface, ComponentDidLoad, ComponentDidUpdate {\n    @Element() element: HTMLElement;\n\n    private menuElement: HTMLElement;\n    private buttonElement: HTMLElement;\n    private popper: Instance;\n\n    /**\n     * Label nearby to the dot menu icon\n     */\n    @Prop() label = '';\n\n    /**\n     * Switch dark colors to bright font color\n     */\n    @Prop() invertColor = false;\n\n    /**\n     * Menu size\n     */\n    @Prop() size: PdButtonSize = 'normal';\n\n    /**\n     * Items to display and select in dropdown\n     */\n    @Prop() items: any[] = [];\n\n    /**\n     * Prefered placement of menu dropdown\n     */\n    @Prop() placement: PdPlacement = 'bottom-start';\n\n    @Watch('placement')\n    placementChanged(placement: PdPlacement) {\n        this.popper.setOptions({ placement });\n    }\n\n    @State() isOpen = false;\n\n    /**\n     * Open menu\n     */\n    @Method()\n    async open() {\n        this.isOpen = true;\n    }\n\n    /**\n     * Close menu\n     */\n    @Method()\n    async close() {\n        this.isOpen = false;\n    }\n\n    @Listen('click', { target: 'body' })\n    handleClick(ev: MouseEvent) {\n        if (!ev.composedPath().includes(this.element)) this.isOpen = false;\n    }\n\n    public componentDidLoad() {\n        this.popper = this.createMenuPopper(this.buttonElement, this.menuElement);\n    }\n\n    public componentDidUpdate() {\n        if (!this.isOpen) return;\n        this.popper.forceUpdate();\n    }\n\n    private toggleOpenState() {\n        this.isOpen = !this.isOpen;\n    }\n\n    // create a popper js element for the menu\n    private createMenuPopper(button, menu) {\n        return createPopper(button, menu, {\n            placement: this.placement,\n        });\n    }\n\n    public render() {\n        return (\n            <Host>\n                <div class={{ 'pd-menu': true, 'pd-menu-inverted': this.invertColor }}>\n                    <button\n                        ref={el => (this.buttonElement = el)}\n                        class={{ 'pd-menu-button': true, [`pd-menu-${this.size}`]: true }}\n                        type=\"button\"\n                        aria-haspopup=\"true\"\n                        aria-expanded={`${this.isOpen}`}\n                        onClick={() => this.toggleOpenState()}\n                        data-test=\"pd-menu-button\"\n                    >\n                        {this.renderLabel()}\n                        <pd-icon class=\"pd-menu-icon\" size={2} name=\"menu_actions\" lazy={false}></pd-icon>\n                    </button>\n                    <div>{this.renderMenu()}</div>\n                </div>\n            </Host>\n        );\n    }\n\n    private renderMenu() {\n        return (\n            <div\n                ref={el => (this.menuElement = el)}\n                class={`pd-menu-content`}\n                style={{\n                    display: this.isOpen ? 'block' : 'none',\n                }}\n                onClick={() => this.toggleOpenState()}\n            >\n                <slot></slot>\n            </div>\n        );\n    }\n\n    private renderLabel() {\n        if (!this.label) return;\n        return (\n            <span class=\"pd-menu-label\" data-test=\"pd-menu-label\">\n                {this.label}\n            </span>\n        );\n    }\n}\n"],"version":3}