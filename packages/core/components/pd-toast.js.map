{"file":"pd-toast.js","mappings":";;;AAAA,MAAM,UAAU,GAAG,g0CAAg0C;;MCUt0C,KAAK,iBAAAA,kBAAA,CAAA,MAAA,KAAA,SAAAC,CAAA,CAAA;;;;;;;AACd;;AAEG;AACK,IAAA,MAAM;AAEd;;AAEG;AACK,IAAA,IAAI;AAEZ;;AAEG;IACK,IAAI,GAAsB,OAAO;AAEzC;;AAEG;AACgC,IAAA,QAAQ;IAEpC,MAAM,GAAA;QACT,QACI,CAAA,CAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EACD,KAAK,EAAE;AACH,gBAAA,QAAQ,EAAE,IAAI,CAAC,IAAI,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO;AACtD,aAAA,EAAA,EAED,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,iBAAiB,EAAA,EACxB,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,sBAAsB,EAAA,EAC7B,CAAM,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,gBAAgB,EAAW,WAAA,EAAA,gBAAgB,IAClD,IAAI,CAAC,MAAM,CACT,CACL,EACN,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,uBAAuB,EAAA,EAC7B,IAAI,CAAC,UAAU,EAAE,EAClB,CAAA,CAAA,QAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAQ,KAAK,EAAC,uBAAuB,EAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAA,WAAA,EAAY,gBAAgB,EAAA,EACzF,CAAA,CAAA,SAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAS,KAAK,EAAC,gBAAgB,EAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAE,CAAC,EAAY,CAAA,CAC3D,CACP,CACJ,EACN,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,eAAe,EAAA,EACtB,CAAa,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACX,CACH;;IAIP,UAAU,GAAA;QACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO;YAAE;QACzC,QACI,CAAA,CAAA,MAAA,EAAA,EAAM,KAAK,EAAC,eAAe,EAAA,WAAA,EAAW,eAAe,EAAA,EAChD,IAAI,CAAC,IAAI,CACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-toast/pd-toast.scss?tag=pd-toast&encapsulation=shadow","src/components/pd-toast/pd-toast.tsx"],"sourcesContent":[":host {\n    display: block;\n    padding: 1.25rem;\n    box-shadow: 0 0 0.5rem rgba($color: $pd-black, $alpha: 0.45);\n    border-radius: 0.25rem;\n    background-color: $white;\n}\n\n*,\n::before,\n::after {\n    box-sizing: border-box;\n    outline: none;\n}\n\n.pd-toast-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1.375rem;\n\n    .pd-toast-title {\n        font-weight: 700;\n    }\n\n    .pd-toast-header-left {\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .pd-toast-header-right {\n        display: flex;\n        align-self: flex-start;\n        max-width: 50%;\n\n        .pd-toast-info {\n            font-size: 0.875rem;\n            margin-left: 1rem;\n            overflow: hidden;\n            white-space: nowrap;\n            text-overflow: ellipsis;\n            align-self: center;\n        }\n\n        .pd-toast-close-button {\n            margin: 0;\n            padding: 0;\n            background-color: transparent;\n            border: none;\n            margin-left: 1rem;\n            margin-right: -0.5rem;\n            margin-top: -0.5rem;\n            cursor: pointer;\n\n            &:focus-visible .pd-toast-close {\n                @include focus;\n            }\n\n            .pd-toast-close {\n                fill: setcolor(primary, enabled);\n                min-width: 1rem;\n\n                &:hover {\n                    fill: setcolor(primary, hover);\n                }\n\n                &:active {\n                    fill: setcolor(primary, pressed);\n                }\n            }\n        }\n    }\n}\n\n.pd-toast-body {\n    overflow: hidden;\n}\n","import { Component, ComponentInterface, Event, EventEmitter, h, Host, Prop } from '@stencil/core';\n\n/**\n * @slot - toast content\n */\n@Component({\n    tag: 'pd-toast',\n    styleUrl: 'pd-toast.scss',\n    shadow: true,\n})\nexport class Toast implements ComponentInterface {\n    /**\n     * The Toast title\n     */\n    @Prop() header: string;\n\n    /**\n     * Additional toast information (e.g. 11 minutes ago)\n     */\n    @Prop() info: string;\n\n    /**\n     * Changes max-with of the toast\n     */\n    @Prop() size: 'small' | 'large' = 'large';\n\n    /**\n     * When closing the toast using the close icon\n     */\n    @Event({ eventName: 'pd-closed' }) pdClosed: EventEmitter<any>;\n\n    public render() {\n        return (\n            <Host\n                style={{\n                    maxWidth: this.size === 'small' ? '260px' : '550px',\n                }}\n            >\n                <div class=\"pd-toast-header\">\n                    <div class=\"pd-toast-header-left\">\n                        <span class=\"pd-toast-title\" data-test=\"pd-toast-title\">\n                            {this.header}\n                        </span>\n                    </div>\n                    <div class=\"pd-toast-header-right\">\n                        {this.renderInfo()}\n                        <button class=\"pd-toast-close-button\" onClick={this.pdClosed.emit} data-test=\"pd-toast-close\">\n                            <pd-icon class=\"pd-toast-close\" name=\"close\" size={2}></pd-icon>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"pd-toast-body\">\n                    <slot></slot>\n                </div>\n            </Host>\n        );\n    }\n\n    private renderInfo() {\n        if (!this.info || this.size === 'small') return;\n        return (\n            <span class=\"pd-toast-info\" data-test=\"pd-toast-info\">\n                {this.info}\n            </span>\n        );\n    }\n}\n"],"version":3}