{"file":"pd-list-item-expandable.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/pd-list-item-expandable/pd-list-item-expandable.scss?tag=pd-list-item-expandable&encapsulation=shadow","src/components/pd-list-item-expandable/pd-list-item-expandable.tsx"],"sourcesContent":["/**\n * @prop --pd-list-item-background: Background color of list item\n * @prop --pd-list-item-padding: Padding around the list item\n*/\n\n:host {\n    background-color: var(--pd-list-item-background, transparent);\n    border-radius: 0.25rem;\n    overflow: hidden;\n    --negative-icon-margin: -0.5rem 0.25rem -0.5rem -0.5rem;\n\n    .pd-list-item-expandable-header {\n        display: grid;\n        grid-template-columns: auto auto 1fr auto;\n        transition: background-color 0.15s ease-in-out;\n        align-items: center;\n        padding: var(--pd-list-item-padding, 0.75rem 1rem);\n\n        &.pd-list-item-expandable-selected {\n            background-color: $cyan-0;\n        }\n\n        /**\n     * @prop --pd-list-item-content-hover: Background color for content hover effect\n     */\n        &.pd-content-hover {\n            background-color: var(--pd-list-item-content-hover, $gray-3);\n            cursor: pointer;\n        }\n    }\n\n    *,\n    ::before,\n    ::after {\n        box-sizing: border-box;\n        appearance: none;\n        outline: none;\n    }\n\n    .pd-list-item-expandable-checkbox {\n        --pd-checkbox-text-padding-left: 0;\n        display: flex;\n        align-items: center;\n        height: 100%;\n        padding-right: 0.875rem;\n    }\n\n    .pd-list-item-expandable-status {\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin: var(--negative-icon-margin);\n    }\n\n    .pd-list-item-expandable-content {\n        flex: 1 1 auto;\n        grid-column: 3 / span 1;\n    }\n\n    .pd-list-item-expandable-additional-content-wrapper {\n        transition: height 0.3s ease-in-out;\n        height: auto;\n\n        .pd-list-item-expandable-additional-content {\n            padding: var(--pd-list-item-padding, 0.75rem 1rem);\n        }\n    }\n\n    .pd-list-item-expandable-actions {\n        display: flex;\n        margin: var(--negative-icon-margin);\n        margin-left: 1rem;\n\n        .pd-list-item-expandable-expand,\n        .pd-list-item-expandable-edit {\n            background-color: transparent;\n            border: none;\n            fill: setcolor(primary, enabled);\n            cursor: pointer;\n            padding: 0 0 0 0.125rem;\n            margin: 0;\n\n            &:hover {\n                fill: setcolor(primary, hover);\n            }\n\n            &:focus-visible {\n                @include focus;\n            }\n\n            &:active {\n                fill: setcolor(primary, pressed);\n            }\n        }\n\n        .pd-list-item-expandable-menu {\n            --pd-menu-horizontal-padding: 0;\n        }\n    }\n}\n","import {\n    Component,\n    ComponentDidLoad,\n    ComponentInterface,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\n\nimport { PdStatus } from '../../types';\nimport { collapse, expand } from '../../utils';\n\n/**\n * @slot - ListItemExpandable content\n * @slot action-left - Left of Actions\n * @slot action-right - Right of Actions\n * @slot expandable - Expandable content\n * @slot menu - Slot for list item menu\n */\n@Component({\n    tag: 'pd-list-item-expandable',\n    styleUrl: 'pd-list-item-expandable.scss',\n    shadow: true,\n})\nexport class ListItemExpandable implements ComponentInterface, ComponentDidLoad {\n    private contentWrapperElement: HTMLElement;\n\n    @State() contentHover: boolean = false;\n\n    /**\n     * Status icon for list item\n     */\n    @Prop() status: PdStatus;\n\n    /**\n     * Expands / collapses the inner content of the list item\n     */\n    @Prop() collapsed: boolean = true;\n\n    /** Shows edit button */\n    @Prop() checkbox: boolean = false;\n\n    /** Shows edit button */\n    @Prop() edit: boolean = false;\n\n    /** Shows expand button with simple event (no expandable inner content) */\n    @Prop() expand: boolean = false;\n\n    /** Shows menu button */\n    @Prop() menu: boolean = false;\n\n    /** Shows expand (toggle) button for expandable inner content */\n    @Prop() expandable: boolean = false;\n\n    /** Sets check state of the checkbox true/false */\n    @Prop({ mutable: true }) checked: boolean = false;\n\n    /** Adds content click event and style to item */\n    @Prop() contentClick: boolean = false;\n\n    /** Edit button click event */\n    @Event({ eventName: 'pd-edit' }) pdEdit: EventEmitter<void>;\n\n    /** Expand button click event */\n    @Event({ eventName: 'pd-expand' }) pdExpand: EventEmitter<void>;\n\n    /** Checkbox selected event */\n    @Event({ eventName: 'pd-selected' }) pdSelected: EventEmitter<boolean>;\n\n    /** Inner content collapsed/expanded */\n    @Event({ eventName: 'pd-collapsed' }) pdCollapsed: EventEmitter<boolean>;\n\n    /** Event on content click (content-click has to be set) */\n    @Event({ eventName: 'pd-content-click' }) pdContentClick: EventEmitter<void>;\n\n    @Watch('collapsed')\n    valueChanged(collapsed: boolean) {\n        if (collapsed) {\n            collapse(this.contentWrapperElement);\n        } else {\n            expand(this.contentWrapperElement);\n        }\n    }\n\n    public componentDidLoad() {\n        // start collapsed\n        if (this.collapsed) {\n            this.contentWrapperElement.style.height = '0';\n            this.contentWrapperElement.style.overflow = 'hidden';\n        }\n    }\n\n    private handleExpand() {\n        if (this.expandable) this.collapsed = !this.collapsed;\n        if (this.expand) this.pdExpand.emit();\n        if (this.expandable) this.pdCollapsed.emit(this.collapsed);\n    }\n\n    private checkboxChecked(event: CustomEvent<boolean>) {\n        event.stopPropagation();\n        this.checked = event.detail;\n        this.pdSelected.emit(event.detail);\n    }\n\n    public render() {\n        return (\n            <Host>\n                <div\n                    class={{\n                        'pd-content-hover': this.contentHover,\n                        'pd-list-item-expandable-selected': this.checked,\n                        'pd-list-item-expandable-header': true,\n                    }}>\n                    {this.renderCheckbox()}\n                    {this.renderStatus()}\n                    <div\n                        class=\"pd-list-item-expandable-content\"\n                        onClick={() => (this.contentClick ? this.pdContentClick.emit() : null)}\n                        onMouseOver={() => (this.contentClick ? (this.contentHover = true) : null)}\n                        onMouseOut={() => (this.contentClick ? (this.contentHover = false) : null)}>\n                        <slot></slot>\n                    </div>\n                    <div\n                        class={{\n                            'pd-list-item-expandable-actions': this.edit || this.expand || this.expandable || this.menu,\n                        }}\n                        data-test=\"pd-list-item-expandable-actions\">\n                        <slot name=\"action-left\"></slot>\n                        {this.renderEdit()}\n                        {this.renderMenu()}\n                        {this.renderExpand()}\n                        <slot name=\"action-right\"></slot>\n                    </div>\n                </div>\n                <div\n                    ref={el => (this.contentWrapperElement = el)}\n                    class=\"pd-list-item-expandable-additional-content-wrapper\">\n                    <div class=\"pd-list-item-expandable-additional-content\">\n                        <slot name=\"expandable\"></slot>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n    private renderStatus = () => {\n        if (!this.status) return;\n        return (\n            <div\n                class=\"pd-list-item-expandable-status\"\n                data-test=\"pd-list-item-expandable-status\"\n                onClick={() => (this.contentClick ? this.pdContentClick.emit() : null)}\n                onMouseOver={() => (this.contentClick ? (this.contentHover = true) : null)}\n                onMouseOut={() => (this.contentClick ? (this.contentHover = false) : null)}>\n                {this.renderStatusIcon()}\n            </div>\n        );\n    };\n\n    private renderExpand = () => {\n        if (!this.expandable && !this.expand) return;\n        return (\n            <button\n                class=\"pd-list-item-expandable-expand\"\n                onClick={() => this.handleExpand()}\n                data-test=\"pd-list-item-expandable-expand\">\n                <pd-icon name=\"caret\" rotate={this.collapsed ? 0 : 180} size={2.2}></pd-icon>\n            </button>\n        );\n    };\n\n    private renderEdit() {\n        if (!this.edit) return;\n        return (\n            <button\n                class=\"pd-list-item-expandable-edit\"\n                onClick={() => this.pdEdit.emit()}\n                data-test=\"pd-list-item-expandable-edit\">\n                <pd-icon name=\"edit\" size={2.2}></pd-icon>\n            </button>\n        );\n    }\n\n    private renderMenu() {\n        if (!this.menu) return;\n        return (\n            <pd-menu class=\"pd-list-item-expandable-menu\" data-test=\"pd-list-item-expandable-menu\">\n                <slot name=\"menu\"></slot>\n            </pd-menu>\n        );\n    }\n\n    private renderStatusIcon() {\n        switch (this.status) {\n            case 'success':\n                return <pd-icon name=\"status_green\" size={2.5}></pd-icon>;\n            case 'warning':\n                return <pd-icon name=\"status_orange\" size={2.5}></pd-icon>;\n            case 'danger':\n                return <pd-icon name=\"status_red\" size={2.5}></pd-icon>;\n            case 'info':\n                return <pd-icon name=\"status_blue\" size={2.5}></pd-icon>;\n            case 'unset':\n                return <pd-icon name=\"status_undefined\" size={2.5}></pd-icon>;\n            default:\n                break;\n        }\n    }\n\n    private renderCheckbox() {\n        if (!this.checkbox) return;\n        return (\n            <div class=\"pd-list-item-expandable-checkbox\">\n                <pd-checkbox\n                    onPd-checked={ev => this.checkboxChecked(ev)}\n                    checked={this.checked}\n                    data-test=\"pd-list-item-expandable-checkbox\"></pd-checkbox>\n            </div>\n        );\n    }\n}\n"],"version":3}